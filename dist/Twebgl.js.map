{"version":3,"sources":["webpack://Twebgl/webpack/universalModuleDefinition","webpack://Twebgl/webpack/bootstrap","webpack://Twebgl/./src/GLConstant.ts","webpack://Twebgl/./src/GeometryInfo.ts","webpack://Twebgl/./src/Helper.ts","webpack://Twebgl/./src/ProgramInfo.ts","webpack://Twebgl/./src/State.ts","webpack://Twebgl/./src/Texture.ts","webpack://Twebgl/./src/Twebgl.ts","webpack://Twebgl/./src/VertexAttribute.ts","webpack://Twebgl/./src/VertexIndex.ts"],"names":[],"mappings":"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","file":"Twebgl.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Twebgl\"] = factory();\n\telse\n\t\troot[\"Twebgl\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/Twebgl.ts\");\n","/**\r\n * Enum containing WebGL Constant values by name.\r\n * for use without an active WebGL context, or in cases where certain constants are unavailable using the WebGL context\r\n * (For example, in [Safari 9]{@link https://github.com/AnalyticalGraphicsInc/cesium/issues/2989}).\r\n *\r\n * These match the constants from the [WebGL 1.0]{@link https://www.khronos.org/registry/webgl/specs/latest/1.0/}\r\n * and [WebGL 2.0]{@link https://www.khronos.org/registry/webgl/specs/latest/2.0/}\r\n * specifications.\r\n *\r\n * @exports WebGLConstants\r\n */\r\nexport enum GLConstants\r\n{\r\n    DEPTH_BUFFER_BIT = 0x00000100,\r\n    STENCIL_BUFFER_BIT = 0x00000400,\r\n    COLOR_BUFFER_BIT = 0x00004000,\r\n    POINTS = 0x0000,\r\n    LINES = 0x0001,\r\n    LINE_LOOP = 0x0002,\r\n    LINE_STRIP = 0x0003,\r\n    TRIANGLES = 0x0004,\r\n    TRIANGLE_STRIP = 0x0005,\r\n    TRIANGLE_FAN = 0x0006,\r\n    ZERO = 0,\r\n    ONE = 1,\r\n    SRC_COLOR = 0x0300,\r\n    ONE_MINUS_SRC_COLOR = 0x0301,\r\n    SRC_ALPHA = 0x0302,\r\n    ONE_MINUS_SRC_ALPHA = 0x0303,\r\n    DST_ALPHA = 0x0304,\r\n    ONE_MINUS_DST_ALPHA = 0x0305,\r\n    DST_COLOR = 0x0306,\r\n    ONE_MINUS_DST_COLOR = 0x0307,\r\n    SRC_ALPHA_SATURATE = 0x0308,\r\n    FUNC_ADD = 0x8006,\r\n    BLEND_EQUATION = 0x8009,\r\n    BLEND_EQUATION_RGB = 0x8009, // same as BLEND_EQUATION\r\n    BLEND_EQUATION_ALPHA = 0x883D,\r\n    FUNC_SUBTRACT = 0x800A,\r\n    FUNC_REVERSE_SUBTRACT = 0x800B,\r\n    BLEND_DST_RGB = 0x80C8,\r\n    BLEND_SRC_RGB = 0x80C9,\r\n    BLEND_DST_ALPHA = 0x80CA,\r\n    BLEND_SRC_ALPHA = 0x80CB,\r\n    CONSTANT_COLOR = 0x8001,\r\n    ONE_MINUS_CONSTANT_COLOR = 0x8002,\r\n    CONSTANT_ALPHA = 0x8003,\r\n    ONE_MINUS_CONSTANT_ALPHA = 0x8004,\r\n    BLEND_COLOR = 0x8005,\r\n    ARRAY_BUFFER = 0x8892,\r\n    ELEMENT_ARRAY_BUFFER = 0x8893,\r\n    ARRAY_BUFFER_BINDING = 0x8894,\r\n    ELEMENT_ARRAY_BUFFER_BINDING = 0x8895,\r\n    STREAM_DRAW = 0x88E0,\r\n    STATIC_DRAW = 0x88E4,\r\n    DYNAMIC_DRAW = 0x88E8,\r\n    BUFFER_SIZE = 0x8764,\r\n    BUFFER_USAGE = 0x8765,\r\n    CURRENT_VERTEX_ATTRIB = 0x8626,\r\n    FRONT = 0x0404,\r\n    BACK = 0x0405,\r\n    FRONT_AND_BACK = 0x0408,\r\n    CULL_FACE = 0x0B44,\r\n    BLEND = 0x0BE2,\r\n    DITHER = 0x0BD0,\r\n    STENCIL_TEST = 0x0B90,\r\n    DEPTH_TEST = 0x0B71,\r\n    SCISSOR_TEST = 0x0C11,\r\n    POLYGON_OFFSET_FILL = 0x8037,\r\n    SAMPLE_ALPHA_TO_COVERAGE = 0x809E,\r\n    SAMPLE_COVERAGE = 0x80A0,\r\n    NO_ERROR = 0,\r\n    INVALID_ENUM = 0x0500,\r\n    INVALID_VALUE = 0x0501,\r\n    INVALID_OPERATION = 0x0502,\r\n    OUT_OF_MEMORY = 0x0505,\r\n    CW = 0x0900,\r\n    CCW = 0x0901,\r\n    LINE_WIDTH = 0x0B21,\r\n    ALIASED_POINT_SIZE_RANGE = 0x846D,\r\n    ALIASED_LINE_WIDTH_RANGE = 0x846E,\r\n    CULL_FACE_MODE = 0x0B45,\r\n    FRONT_FACE = 0x0B46,\r\n    DEPTH_RANGE = 0x0B70,\r\n    DEPTH_WRITEMASK = 0x0B72,\r\n    DEPTH_CLEAR_VALUE = 0x0B73,\r\n    DEPTH_FUNC = 0x0B74,\r\n    STENCIL_CLEAR_VALUE = 0x0B91,\r\n    STENCIL_FUNC = 0x0B92,\r\n    STENCIL_FAIL = 0x0B94,\r\n    STENCIL_PASS_DEPTH_FAIL = 0x0B95,\r\n    STENCIL_PASS_DEPTH_PASS = 0x0B96,\r\n    STENCIL_REF = 0x0B97,\r\n    STENCIL_VALUE_MASK = 0x0B93,\r\n    STENCIL_WRITEMASK = 0x0B98,\r\n    STENCIL_BACK_FUNC = 0x8800,\r\n    STENCIL_BACK_FAIL = 0x8801,\r\n    STENCIL_BACK_PASS_DEPTH_FAIL = 0x8802,\r\n    STENCIL_BACK_PASS_DEPTH_PASS = 0x8803,\r\n    STENCIL_BACK_REF = 0x8CA3,\r\n    STENCIL_BACK_VALUE_MASK = 0x8CA4,\r\n    STENCIL_BACK_WRITEMASK = 0x8CA5,\r\n    VIEWPORT = 0x0BA2,\r\n    SCISSOR_BOX = 0x0C10,\r\n    COLOR_CLEAR_VALUE = 0x0C22,\r\n    COLOR_WRITEMASK = 0x0C23,\r\n    UNPACK_ALIGNMENT = 0x0CF5,\r\n    PACK_ALIGNMENT = 0x0D05,\r\n    MAX_TEXTURE_SIZE = 0x0D33,\r\n    MAX_VIEWPORT_DIMS = 0x0D3A,\r\n    SUBPIXEL_BITS = 0x0D50,\r\n    RED_BITS = 0x0D52,\r\n    GREEN_BITS = 0x0D53,\r\n    BLUE_BITS = 0x0D54,\r\n    ALPHA_BITS = 0x0D55,\r\n    DEPTH_BITS = 0x0D56,\r\n    STENCIL_BITS = 0x0D57,\r\n    POLYGON_OFFSET_UNITS = 0x2A00,\r\n    POLYGON_OFFSET_FACTOR = 0x8038,\r\n    TEXTURE_BINDING_2D = 0x8069,\r\n    SAMPLE_BUFFERS = 0x80A8,\r\n    SAMPLES = 0x80A9,\r\n    SAMPLE_COVERAGE_VALUE = 0x80AA,\r\n    SAMPLE_COVERAGE_INVERT = 0x80AB,\r\n    COMPRESSED_TEXTURE_FORMATS = 0x86A3,\r\n    DONT_CARE = 0x1100,\r\n    FASTEST = 0x1101,\r\n    NICEST = 0x1102,\r\n    GENERATE_MIPMAP_HINT = 0x8192,\r\n    BYTE = 0x1400,\r\n    UNSIGNED_BYTE = 0x1401,\r\n    SHORT = 0x1402,\r\n    UNSIGNED_SHORT = 0x1403,\r\n    INT = 0x1404,\r\n    UNSIGNED_INT = 0x1405,\r\n    FLOAT = 0x1406,\r\n    DEPTH_COMPONENT = 0x1902,\r\n    ALPHA = 0x1906,\r\n    RGB = 0x1907,\r\n    RGBA = 0x1908,\r\n    LUMINANCE = 0x1909,\r\n    LUMINANCE_ALPHA = 0x190A,\r\n    UNSIGNED_SHORT_4_4_4_4 = 0x8033,\r\n    UNSIGNED_SHORT_5_5_5_1 = 0x8034,\r\n    UNSIGNED_SHORT_5_6_5 = 0x8363,\r\n    FRAGMENT_SHADER = 0x8B30,\r\n    VERTEX_SHADER = 0x8B31,\r\n    MAX_VERTEX_ATTRIBS = 0x8869,\r\n    MAX_VERTEX_UNIFORM_VECTORS = 0x8DFB,\r\n    MAX_varying_VECTORS = 0x8DFC,\r\n    MAX_COMBINED_TEXTURE_IMAGE_UNITS = 0x8B4D,\r\n    MAX_VERTEX_TEXTURE_IMAGE_UNITS = 0x8B4C,\r\n    MAX_TEXTURE_IMAGE_UNITS = 0x8872,\r\n    MAX_FRAGMENT_UNIFORM_VECTORS = 0x8DFD,\r\n    SHADER_TYPE = 0x8B4F,\r\n    DELETE_STATUS = 0x8B80,\r\n    LINK_STATUS = 0x8B82,\r\n    VALIDATE_STATUS = 0x8B83,\r\n    ATTACHED_SHADERS = 0x8B85,\r\n    ACTIVE_UNIFORMS = 0x8B86,\r\n    ACTIVE_ATTRIBUTES = 0x8B89,\r\n    SHADING_LANGUAGE_VERSION = 0x8B8C,\r\n    CURRENT_PROGRAM = 0x8B8D,\r\n    NEVER = 0x0200,\r\n    LESS = 0x0201,\r\n    EQUAL = 0x0202,\r\n    LEQUAL = 0x0203,\r\n    GREATER = 0x0204,\r\n    NOTEQUAL = 0x0205,\r\n    GEQUAL = 0x0206,\r\n    ALWAYS = 0x0207,\r\n    KEEP = 0x1E00,\r\n    REPLACE = 0x1E01,\r\n    INCR = 0x1E02,\r\n    DECR = 0x1E03,\r\n    INVERT = 0x150A,\r\n    INCR_WRAP = 0x8507,\r\n    DECR_WRAP = 0x8508,\r\n    VENDOR = 0x1F00,\r\n    RENDERER = 0x1F01,\r\n    VERSION = 0x1F02,\r\n    NEAREST = 0x2600,\r\n    LINEAR = 0x2601,\r\n    NEAREST_MIPMAP_NEAREST = 0x2700,\r\n    LINEAR_MIPMAP_NEAREST = 0x2701,\r\n    NEAREST_MIPMAP_LINEAR = 0x2702,\r\n    LINEAR_MIPMAP_LINEAR = 0x2703,\r\n    TEXTURE_MAG_FILTER = 0x2800,\r\n    TEXTURE_MIN_FILTER = 0x2801,\r\n    TEXTURE_WRAP_S = 0x2802,\r\n    TEXTURE_WRAP_T = 0x2803,\r\n    TEXTURE_2D = 0x0DE1,\r\n    TEXTURE = 0x1702,\r\n    TEXTURE_CUBE_MAP = 0x8513,\r\n    TEXTURE_BINDING_CUBE_MAP = 0x8514,\r\n    TEXTURE_CUBE_MAP_POSITIVE_X = 0x8515,\r\n    TEXTURE_CUBE_MAP_NEGATIVE_X = 0x8516,\r\n    TEXTURE_CUBE_MAP_POSITIVE_Y = 0x8517,\r\n    TEXTURE_CUBE_MAP_NEGATIVE_Y = 0x8518,\r\n    TEXTURE_CUBE_MAP_POSITIVE_Z = 0x8519,\r\n    TEXTURE_CUBE_MAP_NEGATIVE_Z = 0x851A,\r\n    MAX_CUBE_MAP_TEXTURE_SIZE = 0x851C,\r\n    TEXTURE0 = 0x84C0,\r\n    TEXTURE1 = 0x84C1,\r\n    TEXTURE2 = 0x84C2,\r\n    TEXTURE3 = 0x84C3,\r\n    TEXTURE4 = 0x84C4,\r\n    TEXTURE5 = 0x84C5,\r\n    TEXTURE6 = 0x84C6,\r\n    TEXTURE7 = 0x84C7,\r\n    TEXTURE8 = 0x84C8,\r\n    TEXTURE9 = 0x84C9,\r\n    TEXTURE10 = 0x84CA,\r\n    TEXTURE11 = 0x84CB,\r\n    TEXTURE12 = 0x84CC,\r\n    TEXTURE13 = 0x84CD,\r\n    TEXTURE14 = 0x84CE,\r\n    TEXTURE15 = 0x84CF,\r\n    TEXTURE16 = 0x84D0,\r\n    TEXTURE17 = 0x84D1,\r\n    TEXTURE18 = 0x84D2,\r\n    TEXTURE19 = 0x84D3,\r\n    TEXTURE20 = 0x84D4,\r\n    TEXTURE21 = 0x84D5,\r\n    TEXTURE22 = 0x84D6,\r\n    TEXTURE23 = 0x84D7,\r\n    TEXTURE24 = 0x84D8,\r\n    TEXTURE25 = 0x84D9,\r\n    TEXTURE26 = 0x84DA,\r\n    TEXTURE27 = 0x84DB,\r\n    TEXTURE28 = 0x84DC,\r\n    TEXTURE29 = 0x84DD,\r\n    TEXTURE30 = 0x84DE,\r\n    TEXTURE31 = 0x84DF,\r\n    ACTIVE_TEXTURE = 0x84E0,\r\n    REPEAT = 0x2901,\r\n    CLAMP_TO_EDGE = 0x812F,\r\n    MIRRORED_REPEAT = 0x8370,\r\n    FLOAT_VEC2 = 0x8B50,\r\n    FLOAT_VEC3 = 0x8B51,\r\n    FLOAT_VEC4 = 0x8B52,\r\n    INT_VEC2 = 0x8B53,\r\n    INT_VEC3 = 0x8B54,\r\n    INT_VEC4 = 0x8B55,\r\n    BOOL = 0x8B56,\r\n    BOOL_VEC2 = 0x8B57,\r\n    BOOL_VEC3 = 0x8B58,\r\n    BOOL_VEC4 = 0x8B59,\r\n    FLOAT_MAT2 = 0x8B5A,\r\n    FLOAT_MAT3 = 0x8B5B,\r\n    FLOAT_MAT4 = 0x8B5C,\r\n    SAMPLER_2D = 0x8B5E,\r\n    SAMPLER_CUBE = 0x8B60,\r\n    VERTEX_ATTRIB_ARRAY_ENABLED = 0x8622,\r\n    VERTEX_ATTRIB_ARRAY_SIZE = 0x8623,\r\n    VERTEX_ATTRIB_ARRAY_STRIDE = 0x8624,\r\n    VERTEX_ATTRIB_ARRAY_TYPE = 0x8625,\r\n    VERTEX_ATTRIB_ARRAY_NORMALIZED = 0x886A,\r\n    VERTEX_ATTRIB_ARRAY_POINTER = 0x8645,\r\n    VERTEX_ATTRIB_ARRAY_BUFFER_BINDING = 0x889F,\r\n    IMPLEMENTATION_COLOR_READ_TYPE = 0x8B9A,\r\n    IMPLEMENTATION_COLOR_READ_FORMAT = 0x8B9B,\r\n    COMPILE_STATUS = 0x8B81,\r\n    LOW_FLOAT = 0x8DF0,\r\n    MEDIUM_FLOAT = 0x8DF1,\r\n    HIGH_FLOAT = 0x8DF2,\r\n    LOW_INT = 0x8DF3,\r\n    MEDIUM_INT = 0x8DF4,\r\n    HIGH_INT = 0x8DF5,\r\n    FRAMEBUFFER = 0x8D40,\r\n    RENDERBUFFER = 0x8D41,\r\n    RGBA4 = 0x8056,\r\n    RGB5_A1 = 0x8057,\r\n    RGB565 = 0x8D62,\r\n    DEPTH_COMPONENT16 = 0x81A5,\r\n    STENCIL_INDEX = 0x1901,\r\n    STENCIL_INDEX8 = 0x8D48,\r\n    DEPTH_STENCIL = 0x84F9,\r\n    RENDERBUFFER_WIDTH = 0x8D42,\r\n    RENDERBUFFER_HEIGHT = 0x8D43,\r\n    RENDERBUFFER_INTERNAL_FORMAT = 0x8D44,\r\n    RENDERBUFFER_RED_SIZE = 0x8D50,\r\n    RENDERBUFFER_GREEN_SIZE = 0x8D51,\r\n    RENDERBUFFER_BLUE_SIZE = 0x8D52,\r\n    RENDERBUFFER_ALPHA_SIZE = 0x8D53,\r\n    RENDERBUFFER_DEPTH_SIZE = 0x8D54,\r\n    RENDERBUFFER_STENCIL_SIZE = 0x8D55,\r\n    FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE = 0x8CD0,\r\n    FRAMEBUFFER_ATTACHMENT_OBJECT_NAME = 0x8CD1,\r\n    FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL = 0x8CD2,\r\n    FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE = 0x8CD3,\r\n    COLOR_ATTACHMENT0 = 0x8CE0,\r\n    DEPTH_ATTACHMENT = 0x8D00,\r\n    STENCIL_ATTACHMENT = 0x8D20,\r\n    DEPTH_STENCIL_ATTACHMENT = 0x821A,\r\n    NONE = 0,\r\n    FRAMEBUFFER_COMPLETE = 0x8CD5,\r\n    FRAMEBUFFER_INCOMPLETE_ATTACHMENT = 0x8CD6,\r\n    FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT = 0x8CD7,\r\n    FRAMEBUFFER_INCOMPLETE_DIMENSIONS = 0x8CD9,\r\n    FRAMEBUFFER_UNSUPPORTED = 0x8CDD,\r\n    FRAMEBUFFER_BINDING = 0x8CA6,\r\n    RENDERBUFFER_BINDING = 0x8CA7,\r\n    MAX_RENDERBUFFER_SIZE = 0x84E8,\r\n    INVALID_FRAMEBUFFER_OPERATION = 0x0506,\r\n    UNPACK_FLIP_Y_WEBGL = 0x9240,\r\n    UNPACK_PREMULTIPLY_ALPHA_WEBGL = 0x9241,\r\n    CONTEXT_LOST_WEBGL = 0x9242,\r\n    UNPACK_COLORSPACE_CONVERSION_WEBGL = 0x9243,\r\n    BROWSER_DEFAULT_WEBGL = 0x9244,\r\n\r\n    // WEBGL_compressed_texture_s3tc\r\n    COMPRESSED_RGB_S3TC_DXT1_EXT = 0x83F0,\r\n    COMPRESSED_RGBA_S3TC_DXT1_EXT = 0x83F1,\r\n    COMPRESSED_RGBA_S3TC_DXT3_EXT = 0x83F2,\r\n    COMPRESSED_RGBA_S3TC_DXT5_EXT = 0x83F3,\r\n\r\n    // WEBGL_compressed_texture_pvrtc\r\n    COMPRESSED_RGB_PVRTC_4BPPV1_IMG = 0x8C00,\r\n    COMPRESSED_RGB_PVRTC_2BPPV1_IMG = 0x8C01,\r\n    COMPRESSED_RGBA_PVRTC_4BPPV1_IMG = 0x8C02,\r\n    COMPRESSED_RGBA_PVRTC_2BPPV1_IMG = 0x8C03,\r\n\r\n    // WEBGL_compressed_texture_etc1\r\n    COMPRESSED_RGB_ETC1_WEBGL = 0x8D64,\r\n\r\n    // Desktop OpenGL\r\n    DOUBLE = 0x140A,\r\n\r\n    // WebGL 2\r\n    READ_BUFFER = 0x0C02,\r\n    UNPACK_ROW_LENGTH = 0x0CF2,\r\n    UNPACK_SKIP_ROWS = 0x0CF3,\r\n    UNPACK_SKIP_PIXELS = 0x0CF4,\r\n    PACK_ROW_LENGTH = 0x0D02,\r\n    PACK_SKIP_ROWS = 0x0D03,\r\n    PACK_SKIP_PIXELS = 0x0D04,\r\n    COLOR = 0x1800,\r\n    DEPTH = 0x1801,\r\n    STENCIL = 0x1802,\r\n    RED = 0x1903,\r\n    RGB8 = 0x8051,\r\n    RGBA8 = 0x8058,\r\n    RGB10_A2 = 0x8059,\r\n    TEXTURE_BINDING_3D = 0x806A,\r\n    UNPACK_SKIP_IMAGES = 0x806D,\r\n    UNPACK_IMAGE_HEIGHT = 0x806E,\r\n    TEXTURE_3D = 0x806F,\r\n    TEXTURE_WRAP_R = 0x8072,\r\n    MAX_3D_TEXTURE_SIZE = 0x8073,\r\n    UNSIGNED_INT_2_10_10_10_REV = 0x8368,\r\n    MAX_ELEMENTS_VERTICES = 0x80E8,\r\n    MAX_ELEMENTS_INDICES = 0x80E9,\r\n    TEXTURE_MIN_LOD = 0x813A,\r\n    TEXTURE_MAX_LOD = 0x813B,\r\n    TEXTURE_BASE_LEVEL = 0x813C,\r\n    TEXTURE_MAX_LEVEL = 0x813D,\r\n    MIN = 0x8007,\r\n    MAX = 0x8008,\r\n    DEPTH_COMPONENT24 = 0x81A6,\r\n    MAX_TEXTURE_LOD_BIAS = 0x84FD,\r\n    TEXTURE_COMPARE_MODE = 0x884C,\r\n    TEXTURE_COMPARE_FUNC = 0x884D,\r\n    CURRENT_QUERY = 0x8865,\r\n    QUERY_RESULT = 0x8866,\r\n    QUERY_RESULT_AVAILABLE = 0x8867,\r\n    STREAM_READ = 0x88E1,\r\n    STREAM_COPY = 0x88E2,\r\n    STATIC_READ = 0x88E5,\r\n    STATIC_COPY = 0x88E6,\r\n    DYNAMIC_READ = 0x88E9,\r\n    DYNAMIC_COPY = 0x88EA,\r\n    MAX_DRAW_BUFFERS = 0x8824,\r\n    DRAW_BUFFER0 = 0x8825,\r\n    DRAW_BUFFER1 = 0x8826,\r\n    DRAW_BUFFER2 = 0x8827,\r\n    DRAW_BUFFER3 = 0x8828,\r\n    DRAW_BUFFER4 = 0x8829,\r\n    DRAW_BUFFER5 = 0x882A,\r\n    DRAW_BUFFER6 = 0x882B,\r\n    DRAW_BUFFER7 = 0x882C,\r\n    DRAW_BUFFER8 = 0x882D,\r\n    DRAW_BUFFER9 = 0x882E,\r\n    DRAW_BUFFER10 = 0x882F,\r\n    DRAW_BUFFER11 = 0x8830,\r\n    DRAW_BUFFER12 = 0x8831,\r\n    DRAW_BUFFER13 = 0x8832,\r\n    DRAW_BUFFER14 = 0x8833,\r\n    DRAW_BUFFER15 = 0x8834,\r\n    MAX_FRAGMENT_UNIFORM_COMPONENTS = 0x8B49,\r\n    MAX_VERTEX_UNIFORM_COMPONENTS = 0x8B4A,\r\n    SAMPLER_3D = 0x8B5F,\r\n    SAMPLER_2D_SHADOW = 0x8B62,\r\n    FRAGMENT_SHADER_DERIVATIVE_HINT = 0x8B8B,\r\n    PIXEL_PACK_BUFFER = 0x88EB,\r\n    PIXEL_UNPACK_BUFFER = 0x88EC,\r\n    PIXEL_PACK_BUFFER_BINDING = 0x88ED,\r\n    PIXEL_UNPACK_BUFFER_BINDING = 0x88EF,\r\n    FLOAT_MAT2x3 = 0x8B65,\r\n    FLOAT_MAT2x4 = 0x8B66,\r\n    FLOAT_MAT3x2 = 0x8B67,\r\n    FLOAT_MAT3x4 = 0x8B68,\r\n    FLOAT_MAT4x2 = 0x8B69,\r\n    FLOAT_MAT4x3 = 0x8B6A,\r\n    SRGB = 0x8C40,\r\n    SRGB8 = 0x8C41,\r\n    SRGB8_ALPHA8 = 0x8C43,\r\n    COMPARE_REF_TO_TEXTURE = 0x884E,\r\n    RGBA32F = 0x8814,\r\n    RGB32F = 0x8815,\r\n    RGBA16F = 0x881A,\r\n    RGB16F = 0x881B,\r\n    VERTEX_ATTRIB_ARRAY_INTEGER = 0x88FD,\r\n    MAX_ARRAY_TEXTURE_LAYERS = 0x88FF,\r\n    MIN_PROGRAM_TEXEL_OFFSET = 0x8904,\r\n    MAX_PROGRAM_TEXEL_OFFSET = 0x8905,\r\n    MAX_varying_COMPONENTS = 0x8B4B,\r\n    TEXTURE_2D_ARRAY = 0x8C1A,\r\n    TEXTURE_BINDING_2D_ARRAY = 0x8C1D,\r\n    R11F_G11F_B10F = 0x8C3A,\r\n    UNSIGNED_INT_10F_11F_11F_REV = 0x8C3B,\r\n    RGB9_E5 = 0x8C3D,\r\n    UNSIGNED_INT_5_9_9_9_REV = 0x8C3E,\r\n    TRANSFORM_FEEDBACK_BUFFER_MODE = 0x8C7F,\r\n    MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS = 0x8C80,\r\n    TRANSFORM_FEEDBACK_varyingS = 0x8C83,\r\n    TRANSFORM_FEEDBACK_BUFFER_START = 0x8C84,\r\n    TRANSFORM_FEEDBACK_BUFFER_SIZE = 0x8C85,\r\n    TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN = 0x8C88,\r\n    RASTERIZER_DISCARD = 0x8C89,\r\n    MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS = 0x8C8A,\r\n    MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS = 0x8C8B,\r\n    INTERLEAVED_ATTRIBS = 0x8C8C,\r\n    SEPARATE_ATTRIBS = 0x8C8D,\r\n    TRANSFORM_FEEDBACK_BUFFER = 0x8C8E,\r\n    TRANSFORM_FEEDBACK_BUFFER_BINDING = 0x8C8F,\r\n    RGBA32UI = 0x8D70,\r\n    RGB32UI = 0x8D71,\r\n    RGBA16UI = 0x8D76,\r\n    RGB16UI = 0x8D77,\r\n    RGBA8UI = 0x8D7C,\r\n    RGB8UI = 0x8D7D,\r\n    RGBA32I = 0x8D82,\r\n    RGB32I = 0x8D83,\r\n    RGBA16I = 0x8D88,\r\n    RGB16I = 0x8D89,\r\n    RGBA8I = 0x8D8E,\r\n    RGB8I = 0x8D8F,\r\n    RED_INTEGER = 0x8D94,\r\n    RGB_INTEGER = 0x8D98,\r\n    RGBA_INTEGER = 0x8D99,\r\n    SAMPLER_2D_ARRAY = 0x8DC1,\r\n    SAMPLER_2D_ARRAY_SHADOW = 0x8DC4,\r\n    SAMPLER_CUBE_SHADOW = 0x8DC5,\r\n    UNSIGNED_INT_VEC2 = 0x8DC6,\r\n    UNSIGNED_INT_VEC3 = 0x8DC7,\r\n    UNSIGNED_INT_VEC4 = 0x8DC8,\r\n    INT_SAMPLER_2D = 0x8DCA,\r\n    INT_SAMPLER_3D = 0x8DCB,\r\n    INT_SAMPLER_CUBE = 0x8DCC,\r\n    INT_SAMPLER_2D_ARRAY = 0x8DCF,\r\n    UNSIGNED_INT_SAMPLER_2D = 0x8DD2,\r\n    UNSIGNED_INT_SAMPLER_3D = 0x8DD3,\r\n    UNSIGNED_INT_SAMPLER_CUBE = 0x8DD4,\r\n    UNSIGNED_INT_SAMPLER_2D_ARRAY = 0x8DD7,\r\n    DEPTH_COMPONENT32F = 0x8CAC,\r\n    DEPTH32F_STENCIL8 = 0x8CAD,\r\n    FLOAT_32_UNSIGNED_INT_24_8_REV = 0x8DAD,\r\n    FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING = 0x8210,\r\n    FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE = 0x8211,\r\n    FRAMEBUFFER_ATTACHMENT_RED_SIZE = 0x8212,\r\n    FRAMEBUFFER_ATTACHMENT_GREEN_SIZE = 0x8213,\r\n    FRAMEBUFFER_ATTACHMENT_BLUE_SIZE = 0x8214,\r\n    FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE = 0x8215,\r\n    FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE = 0x8216,\r\n    FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE = 0x8217,\r\n    FRAMEBUFFER_DEFAULT = 0x8218,\r\n    UNSIGNED_INT_24_8 = 0x84FA,\r\n    DEPTH24_STENCIL8 = 0x88F0,\r\n    UNSIGNED_NORMALIZED = 0x8C17,\r\n    DRAW_FRAMEBUFFER_BINDING = 0x8CA6, // Same as FRAMEBUFFER_BINDING\r\n    READ_FRAMEBUFFER = 0x8CA8,\r\n    DRAW_FRAMEBUFFER = 0x8CA9,\r\n    READ_FRAMEBUFFER_BINDING = 0x8CAA,\r\n    RENDERBUFFER_SAMPLES = 0x8CAB,\r\n    FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER = 0x8CD4,\r\n    MAX_COLOR_ATTACHMENTS = 0x8CDF,\r\n    COLOR_ATTACHMENT1 = 0x8CE1,\r\n    COLOR_ATTACHMENT2 = 0x8CE2,\r\n    COLOR_ATTACHMENT3 = 0x8CE3,\r\n    COLOR_ATTACHMENT4 = 0x8CE4,\r\n    COLOR_ATTACHMENT5 = 0x8CE5,\r\n    COLOR_ATTACHMENT6 = 0x8CE6,\r\n    COLOR_ATTACHMENT7 = 0x8CE7,\r\n    COLOR_ATTACHMENT8 = 0x8CE8,\r\n    COLOR_ATTACHMENT9 = 0x8CE9,\r\n    COLOR_ATTACHMENT10 = 0x8CEA,\r\n    COLOR_ATTACHMENT11 = 0x8CEB,\r\n    COLOR_ATTACHMENT12 = 0x8CEC,\r\n    COLOR_ATTACHMENT13 = 0x8CED,\r\n    COLOR_ATTACHMENT14 = 0x8CEE,\r\n    COLOR_ATTACHMENT15 = 0x8CEF,\r\n    FRAMEBUFFER_INCOMPLETE_MULTISAMPLE = 0x8D56,\r\n    MAX_SAMPLES = 0x8D57,\r\n    HALF_FLOAT = 0x140B,\r\n    HALF_FLOAT_OES = 0x8D61,\r\n    RG = 0x8227,\r\n    RG_INTEGER = 0x8228,\r\n    R8 = 0x8229,\r\n    RG8 = 0x822B,\r\n    R16F = 0x822D,\r\n    R32F = 0x822E,\r\n    RG16F = 0x822F,\r\n    RG32F = 0x8230,\r\n    R8I = 0x8231,\r\n    R8UI = 0x8232,\r\n    R16I = 0x8233,\r\n    R16UI = 0x8234,\r\n    R32I = 0x8235,\r\n    R32UI = 0x8236,\r\n    RG8I = 0x8237,\r\n    RG8UI = 0x8238,\r\n    RG16I = 0x8239,\r\n    RG16UI = 0x823A,\r\n    RG32I = 0x823B,\r\n    RG32UI = 0x823C,\r\n    VERTEX_ARRAY_BINDING = 0x85B5,\r\n    R8_SNORM = 0x8F94,\r\n    RG8_SNORM = 0x8F95,\r\n    RGB8_SNORM = 0x8F96,\r\n    RGBA8_SNORM = 0x8F97,\r\n    SIGNED_NORMALIZED = 0x8F9C,\r\n    COPY_READ_BUFFER = 0x8F36,\r\n    COPY_WRITE_BUFFER = 0x8F37,\r\n    COPY_READ_BUFFER_BINDING = 0x8F36, // Same as COPY_READ_BUFFER\r\n    COPY_WRITE_BUFFER_BINDING = 0x8F37, // Same as COPY_WRITE_BUFFER\r\n    UNIFORM_BUFFER = 0x8A11,\r\n    UNIFORM_BUFFER_BINDING = 0x8A28,\r\n    UNIFORM_BUFFER_START = 0x8A29,\r\n    UNIFORM_BUFFER_SIZE = 0x8A2A,\r\n    MAX_VERTEX_UNIFORM_BLOCKS = 0x8A2B,\r\n    MAX_FRAGMENT_UNIFORM_BLOCKS = 0x8A2D,\r\n    MAX_COMBINED_UNIFORM_BLOCKS = 0x8A2E,\r\n    MAX_UNIFORM_BUFFER_BINDINGS = 0x8A2F,\r\n    MAX_UNIFORM_BLOCK_SIZE = 0x8A30,\r\n    MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS = 0x8A31,\r\n    MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS = 0x8A33,\r\n    UNIFORM_BUFFER_OFFSET_ALIGNMENT = 0x8A34,\r\n    ACTIVE_UNIFORM_BLOCKS = 0x8A36,\r\n    UNIFORM_TYPE = 0x8A37,\r\n    UNIFORM_SIZE = 0x8A38,\r\n    UNIFORM_BLOCK_INDEX = 0x8A3A,\r\n    UNIFORM_OFFSET = 0x8A3B,\r\n    UNIFORM_ARRAY_STRIDE = 0x8A3C,\r\n    UNIFORM_MATRIX_STRIDE = 0x8A3D,\r\n    UNIFORM_IS_ROW_MAJOR = 0x8A3E,\r\n    UNIFORM_BLOCK_BINDING = 0x8A3F,\r\n    UNIFORM_BLOCK_DATA_SIZE = 0x8A40,\r\n    UNIFORM_BLOCK_ACTIVE_UNIFORMS = 0x8A42,\r\n    UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES = 0x8A43,\r\n    UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER = 0x8A44,\r\n    UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER = 0x8A46,\r\n    INVALID_INDEX = 0xFFFFFFFF,\r\n    MAX_VERTEX_OUTPUT_COMPONENTS = 0x9122,\r\n    MAX_FRAGMENT_INPUT_COMPONENTS = 0x9125,\r\n    MAX_SERVER_WAIT_TIMEOUT = 0x9111,\r\n    OBJECT_TYPE = 0x9112,\r\n    SYNC_CONDITION = 0x9113,\r\n    SYNC_STATUS = 0x9114,\r\n    SYNC_FLAGS = 0x9115,\r\n    SYNC_FENCE = 0x9116,\r\n    SYNC_GPU_COMMANDS_COMPLETE = 0x9117,\r\n    UNSIGNALED = 0x9118,\r\n    SIGNALED = 0x9119,\r\n    ALREADY_SIGNALED = 0x911A,\r\n    TIMEOUT_EXPIRED = 0x911B,\r\n    CONDITION_SATISFIED = 0x911C,\r\n    WAIT_FAILED = 0x911D,\r\n    SYNC_FLUSH_COMMANDS_BIT = 0x00000001,\r\n    VERTEX_ATTRIB_ARRAY_DIVISOR = 0x88FE,\r\n    ANY_SAMPLES_PASSED = 0x8C2F,\r\n    ANY_SAMPLES_PASSED_CONSERVATIVE = 0x8D6A,\r\n    SAMPLER_BINDING = 0x8919,\r\n    RGB10_A2UI = 0x906F,\r\n    INT_2_10_10_10_REV = 0x8D9F,\r\n    TRANSFORM_FEEDBACK = 0x8E22,\r\n    TRANSFORM_FEEDBACK_PAUSED = 0x8E23,\r\n    TRANSFORM_FEEDBACK_ACTIVE = 0x8E24,\r\n    TRANSFORM_FEEDBACK_BINDING = 0x8E25,\r\n    COMPRESSED_R11_EAC = 0x9270,\r\n    COMPRESSED_SIGNED_R11_EAC = 0x9271,\r\n    COMPRESSED_RG11_EAC = 0x9272,\r\n    COMPRESSED_SIGNED_RG11_EAC = 0x9273,\r\n    COMPRESSED_RGB8_ETC2 = 0x9274,\r\n    COMPRESSED_SRGB8_ETC2 = 0x9275,\r\n    COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2 = 0x9276,\r\n    COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2 = 0x9277,\r\n    COMPRESSED_RGBA8_ETC2_EAC = 0x9278,\r\n    COMPRESSED_SRGB8_ALPHA8_ETC2_EAC = 0x9279,\r\n    TEXTURE_IMMUTABLE_FORMAT = 0x912F,\r\n    MAX_ELEMENT_INDEX = 0x8D6B,\r\n    TEXTURE_IMMUTABLE_LEVELS = 0x82DF,\r\n\r\n    // Extensions\r\n    MAX_TEXTURE_MAX_ANISOTROPY_EXT = 0x84FF\r\n}","import { IVertexAttrib, IVertexIndex, TypedArray, IGeometryInfo, IDrawInfo, TArrayInfo } from \"./type\";\r\nimport { createIndexBufferInfo } from \"./VertexIndex\";\r\nimport { createAttributeBufferInfo } from \"./VertexAttribute\";\r\n\r\nexport class GeometryInfo implements IGeometryInfo\r\n{\r\n    primitiveType: number;\r\n    atts: { [attName: string]: IVertexAttrib } = {};\r\n    indices?: IVertexIndex;\r\n\r\n    // mode: number;\r\n    count: number;\r\n    offset: number;\r\n}\r\n\r\n\r\nexport function createGeometryInfoFromArray(gl: WebGLRenderingContext, atts: { [keyName: string]: TArrayInfo }, indices?: TArrayInfo, primitiveType?: number): IGeometryInfo\r\n{\r\n    let info = new GeometryInfo();\r\n    info.primitiveType = primitiveType ? primitiveType : gl.TRIANGLES;\r\n\r\n    if (indices != null)\r\n    {\r\n        info.indices = createIndexBufferInfo(gl, indices);\r\n        if (info.count == null)\r\n        {\r\n            info.count = info.indices.length;\r\n        }\r\n    }\r\n\r\n    for (let attName in atts)\r\n    {\r\n        info.atts[attName] = createAttributeBufferInfo(gl, attName, atts[attName]);\r\n        if (info.count == null)\r\n        {\r\n            info.count = info.atts[attName].length;\r\n        }\r\n    }\r\n    return info;\r\n}\r\n","import { GLConstants } from \"./GLConstant\";\r\nimport { TypedArray } from \"./type\";\r\n\r\n/**\r\n * Get the GL type for a typedArray\r\n */\r\nexport function getGLTypeForTypedArray(typedArray: ArrayBufferView): number\r\n{\r\n    if (typedArray instanceof Int8Array) { return GLConstants.BYTE; }\r\n    if (typedArray instanceof Uint8Array) { return GLConstants.UNSIGNED_BYTE; }\r\n    if (typedArray instanceof Uint8ClampedArray) { return GLConstants.UNSIGNED_BYTE; }\r\n    if (typedArray instanceof Int16Array) { return GLConstants.SHORT; }\r\n    if (typedArray instanceof Uint16Array) { return GLConstants.UNSIGNED_SHORT; }\r\n    if (typedArray instanceof Int32Array) { return GLConstants.INT; }\r\n    if (typedArray instanceof Uint32Array) { return GLConstants.UNSIGNED_INT; }\r\n    if (typedArray instanceof Float32Array) { return GLConstants.FLOAT; }\r\n    throw \"unsupported typed array to gl type\";\r\n}\r\n\r\n\r\nexport function getArrayTypeForGLtype(glType: number)\r\n{\r\n    if (glType == GLConstants.BYTE) { return Int8Array; }\r\n    if (glType == GLConstants.UNSIGNED_BYTE) { return Uint8Array; }\r\n    if (glType == GLConstants.UNSIGNED_BYTE) { return Uint8ClampedArray; }\r\n    if (glType == GLConstants.SHORT) { return Int16Array; }\r\n    if (glType == GLConstants.UNSIGNED_SHORT) { return Uint16Array; }\r\n    if (glType == GLConstants.INT) { return Int32Array; }\r\n    if (glType == GLConstants.UNSIGNED_INT) { return Uint32Array; }\r\n    if (glType == GLConstants.FLOAT) { return Float32Array; }\r\n    throw \"unsupported gltype to array type\";\r\n}\r\n\r\nexport function getbytesForGLtype(glType: number)\r\n{\r\n    switch (glType)\r\n    {\r\n        case GLConstants.BYTE: return 1;\r\n        case GLConstants.UNSIGNED_BYTE: return 1;\r\n\r\n        case GLConstants.SHORT: return 2;\r\n        case GLConstants.UNSIGNED_SHORT_4_4_4_4: return 2;\r\n        case GLConstants.UNSIGNED_SHORT: return 2;\r\n\r\n        case GLConstants.INT: return 4;\r\n        case GLConstants.UNSIGNED_INT: return 4;\r\n\r\n        case GLConstants.HALF_FLOAT: return 2;\r\n        case GLConstants.HALF_FLOAT_OES: return 2;\r\n        case GLConstants.FLOAT: return 4;\r\n        default:\r\n            throw \"unsupported gltype to bytesPerElement\";\r\n    }\r\n}\r\n\r\n\r\nexport function getTypedArray(data: number | Array<number>, gltype: number): TypedArray\r\n{\r\n    let type = typeof data;\r\n    if (type == \"number\")\r\n    {\r\n        let type = getArrayTypeForGLtype(gltype);\r\n        return new type(data as number);\r\n    }\r\n    else if (data instanceof Array)\r\n    {\r\n        let type = getArrayTypeForGLtype(gltype);\r\n        return new type(data);\r\n    }\r\n    return null;\r\n}\r\n","import { GLConstants } from \"./GLConstant\";\r\nimport { IBassProgramInfo, IVertexAttrib, IAttributeInfo, IUniformInfo, IProgramInfoOptions, IProgramInfo } from \"./type\";\r\n\r\nexport enum ShaderTypeEnum\r\n{\r\n    VS,\r\n    FS\r\n}\r\n\r\n\r\nexport function createProgramInfo(gl: WebGLRenderingContext, op: IProgramInfoOptions): IProgramInfo\r\n{\r\n    let info: IProgramInfo;\r\n    if ((op.program as IBassProgramInfo).program != null)\r\n    {\r\n        let bassprogram = op.program as IBassProgramInfo;\r\n        info = {} as IProgramInfo;\r\n        info.program = bassprogram.program;\r\n        info.attsDic = bassprogram.attsDic;\r\n        info.uniformsDic = bassprogram.uniformsDic;\r\n    } else\r\n    {\r\n        let bassprogramOp = op.program as {\r\n            vs: string;\r\n            fs: string;\r\n            name: string;\r\n        };;\r\n        info = createBassProgramInfo(gl, bassprogramOp.vs, bassprogramOp.fs, bassprogramOp.name) as IProgramInfo;\r\n    }\r\n    if (op.uniforms)\r\n    {\r\n        info.uniforms = op.uniforms;\r\n    }\r\n    if (op.states)\r\n    {\r\n        info.states = op.states;\r\n    }\r\n    return info;\r\n}\r\n\r\n\r\nexport function createBassProgramInfo(gl: WebGLRenderingContext, vs: string, fs: string, name: string): IBassProgramInfo\r\n{\r\n    let vsShader = createShader(gl, ShaderTypeEnum.VS, vs, name + \"_vs\");\r\n    let fsShader = createShader(gl, ShaderTypeEnum.FS, fs, name + \"_fs\");\r\n    if (vsShader && fsShader)\r\n    {\r\n        let item = gl.createProgram();\r\n        gl.attachShader(item, vsShader.shader);\r\n        gl.attachShader(item, fsShader.shader);\r\n        gl.linkProgram(item);\r\n        let check = gl.getProgramParameter(item, gl.LINK_STATUS);\r\n        if (check == false)\r\n        {\r\n            let debguInfo = \"ERROR: compile program Error!\" + \"VS:\" + vs + \"   FS:\" + fs + \"\\n\" + gl.getProgramInfoLog(item);\r\n            console.error(debguInfo);\r\n            gl.deleteProgram(item);\r\n            return null;\r\n        } else\r\n        {\r\n            let attsInfo = getAttributesInfo(gl, item);\r\n            let uniformsInfo = getUniformsInfo(gl, item);\r\n            return { program: item, programName: name, uniformsDic: uniformsInfo, attsDic: attsInfo };\r\n        }\r\n    }\r\n}\r\n\r\nexport function getAttributesInfo(gl: WebGLRenderingContext, program: WebGLProgram): { [attName: string]: IAttributeInfo }\r\n{\r\n    let attdic: { [attName: string]: IAttributeInfo } = {};\r\n    let numAttribs = gl.getProgramParameter(program, gl.ACTIVE_ATTRIBUTES);\r\n    for (let i = 0; i < numAttribs; i++)\r\n    {\r\n        let attribInfo = gl.getActiveAttrib(program, i);\r\n        if (!attribInfo) break;\r\n        let attName = attribInfo.name;\r\n        let attlocation = gl.getAttribLocation(program, attName);\r\n        let func = getAttributeSetter(gl, attlocation);\r\n\r\n        attdic[attName] = { name: attName, location: attlocation, setter: func };\r\n    }\r\n    return attdic;\r\n}\r\n\r\nexport function getUniformsInfo(gl: WebGLRenderingContext, program: WebGLProgram): { [name: string]: IUniformInfo }\r\n{\r\n    let uniformDic: { [name: string]: IUniformInfo } = {};\r\n    let numUniforms = gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS);\r\n\r\n    gl[\"bindpoint\"] = 0;\r\n    for (let i = 0; i < numUniforms; i++) \r\n    {\r\n        let uniformInfo = gl.getActiveUniform(program, i);\r\n        if (!uniformInfo) break;\r\n\r\n        let name = uniformInfo.name;\r\n        let type = uniformInfo.type;\r\n        let location = gl.getUniformLocation(program, name);\r\n\r\n        let beArray = false;\r\n        // remove the array suffix.\r\n        if (name.substr(-3) === \"[0]\") \r\n        {\r\n            beArray = true;\r\n            // name = name.substr(0, name.length - 3);\r\n        }\r\n        if (location == null) continue;\r\n        let bindpoint = gl[\"bindpoint\"];\r\n        let func = getUniformSetter(gl, type, beArray, location, bindpoint);\r\n        uniformDic[name] = { name: name, location: location, type: type, setter: func };\r\n    }\r\n    return uniformDic;\r\n}\r\n\r\n\r\nexport function createShader(gl: WebGLRenderingContext, type: ShaderTypeEnum, source: string, name: String = null)\r\n{\r\n    let target = type == ShaderTypeEnum.VS ? GLConstants.VERTEX_SHADER : GLConstants.FRAGMENT_SHADER;\r\n    let item = gl.createShader(target);\r\n\r\n    gl.shaderSource(item, source);\r\n    gl.compileShader(item);\r\n    let check = gl.getShaderParameter(item, gl.COMPILE_STATUS);\r\n    if (check == false)\r\n    {\r\n        let debug = type == ShaderTypeEnum.VS ? \"ERROR: compile  VS Shader Error! VS:\" : \"ERROR: compile FS Shader Error! FS:\";\r\n        debug = debug + name + \".\\n\";\r\n        console.error(debug + gl.getShaderInfoLog(item));\r\n        gl.deleteShader(item);\r\n        return null;\r\n    } else\r\n    {\r\n        return { shaderType: type, shaderName: name, shader: item };\r\n    }\r\n}\r\n\r\n\r\nexport function getUniformSetter(gl: WebGLRenderingContext, uniformType: number, beArray: boolean, location: WebGLUniformLocation, bindpoint: number)\r\n{\r\n    switch (uniformType)\r\n    {\r\n        case gl.FLOAT:\r\n            if (beArray)\r\n            {\r\n                return (value: any) =>\r\n                {\r\n                    gl.uniform1f(location, value);\r\n                }\r\n            } else\r\n            {\r\n                return (value: any) =>\r\n                {\r\n                    gl.uniform1fv(location, value);\r\n                }\r\n            }\r\n            break;\r\n        case gl.FLOAT_VEC2:\r\n            return (value) =>\r\n            {\r\n                gl.uniform2fv(location, value);\r\n            }\r\n            break;\r\n        case gl.FLOAT_VEC3:\r\n            return (value) =>\r\n            {\r\n                gl.uniform3fv(location, value);\r\n            }\r\n            break;\r\n        case gl.FLOAT_VEC4:\r\n            return (value) =>\r\n            {\r\n                gl.uniform4fv(location, value);\r\n            }\r\n            break;\r\n        case gl.INT:\r\n        case gl.BOOL:\r\n            if (beArray)\r\n            {\r\n                return (value) =>\r\n                {\r\n                    gl.uniform1iv(location, value);\r\n                }\r\n            } else\r\n            {\r\n                return (value) =>\r\n                {\r\n                    gl.uniform1i(location, value);\r\n                }\r\n            }\r\n            break;\r\n        case gl.INT_VEC2:\r\n        case gl.BOOL_VEC2:\r\n            return (value) =>\r\n            {\r\n                gl.uniform2iv(location, value);\r\n            }\r\n            break;\r\n        case gl.INT_VEC3:\r\n        case gl.BOOL_VEC3:\r\n            return (value) =>\r\n            {\r\n                gl.uniform3iv(location, value);\r\n            }\r\n            break;\r\n        case gl.INT_VEC4:\r\n        case gl.BOOL_VEC4:\r\n            return (value) =>\r\n            {\r\n                gl.uniform4fv(location, value);\r\n            }\r\n            break;\r\n        case gl.FLOAT_MAT2:\r\n            return (value) =>\r\n            {\r\n                gl.uniformMatrix2fv(location, false, value);\r\n            }\r\n        case gl.FLOAT_MAT3:\r\n            return (value) =>\r\n            {\r\n                gl.uniformMatrix3fv(location, false, value);\r\n            }\r\n            break;\r\n        case gl.FLOAT_MAT4:\r\n            return (value) =>\r\n            {\r\n                gl.uniformMatrix4fv(location, false, value);\r\n            }\r\n            break;\r\n        case gl.SAMPLER_2D:\r\n            return (value) =>\r\n            {\r\n                gl.activeTexture(gl.TEXTURE0 + bindpoint);\r\n                gl.bindTexture(gl.TEXTURE_2D, value);\r\n                gl.uniform1i(location, bindpoint);\r\n\r\n                gl[\"bindpoint\"] = gl[\"bindpoint\"] + 1;\r\n            }\r\n        default:\r\n            console.error(\"uniformSetter not handle type:\" + uniformType + \" yet!\");\r\n            break;\r\n    }\r\n}\r\n\r\nexport function getAttributeSetter(gl: WebGLRenderingContext, location: number)\r\n{\r\n    return (value: IVertexAttrib) =>\r\n    {\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, value.buffer);\r\n        gl.enableVertexAttribArray(location);\r\n        gl.vertexAttribPointer(location, value.componentSize, value.componentDataType, value.normalize, value.strideInBytes, value.offsetInBytes);\r\n        if (value.divisor !== undefined)\r\n        {\r\n            gl.vertexAttribDivisor(location, value.divisor);\r\n        }\r\n    }\r\n}","import { IProgramState } from \"./type\";\r\n\r\nimport { GLConstants } from \"./GLConstant\";\r\n\r\n\r\n\r\nexport function setProgramState(gl: WebGLRenderingContext, state: IProgramState)\r\n{\r\n    if (state.beDeduce != true)\r\n    {\r\n        deduceFullShderState(state);\r\n    }\r\n    //---------------------------cullface\r\n    if (state.enableCullFace)\r\n    {\r\n        gl.enable(gl.CULL_FACE);\r\n        gl.cullFace(state.cullBack ? gl.BACK : gl.FRONT);\r\n    } else\r\n    {\r\n        gl.disable(gl.CULL_FACE);\r\n    }\r\n\r\n    //----------------depth\r\n    gl.depthMask(state.depth_Write);\r\n    if (state.depth_Test)\r\n    {\r\n        gl.enable(gl.DEPTH_TEST);\r\n    } else\r\n    {\r\n        gl.disable(gl.DEPTH_TEST);\r\n    }\r\n\r\n    //------------------------blend\r\n    if (state.enableBlend)\r\n    {\r\n        gl.enable(gl.BLEND);\r\n        gl.blendEquation(state.blend_Equation);\r\n        gl.blendFunc(state.blend_Src, state.blend_Dst);\r\n    }\r\n\r\n    //-------------------------stencil\r\n    if (state.enableStencilTest)\r\n    {\r\n        gl.enable(gl.STENCIL_TEST);\r\n        gl.stencilFunc(state.stencilFunc, state.stencil_refValue, state.stencil_Mask);\r\n        gl.stencilOp(state.stencil_Fail, state.stencil_PassZfail, state.stencil_FaileZpass);\r\n    }\r\n}\r\n/**\r\n *\r\n * @param state 原始 webgl state\r\n */\r\n// state 是给每个物体 render用的，是不想受前一个物体render影响，所以需要推断出完整的 webgl state，缺失的按照默认值\r\nfunction deduceFullShderState(state: IProgramState): IProgramState\r\n{\r\n    //----------------------------cull face\r\n    if (state.enableCullFace == null)\r\n    {\r\n        state.enableCullFace = true;\r\n    }\r\n    if (state.enableCullFace)\r\n    {\r\n        if (state.cullBack == null)\r\n        {\r\n            state.cullBack = true;\r\n        }\r\n    }\r\n\r\n    //------------------depth\r\n    if (state.depth_Write == null)\r\n    {\r\n        state.depth_Write = true;\r\n    }\r\n    if (state.depth_Test == null)\r\n    {\r\n        state.depth_Test = true;\r\n    }\r\n    if (state.depth_Test)\r\n    {\r\n        if (state.depth_TestFuc == null)\r\n        {\r\n            state.depth_TestFuc = GLConstants.LEQUAL;\r\n        }\r\n    }\r\n\r\n    //------------------ blend\r\n    if (state.enableBlend == true)\r\n    {\r\n        if (state.blend_Equation == null)\r\n        {\r\n            state.blend_Equation = GLConstants.FUNC_ADD;\r\n        }\r\n        if (state.blend_Src == null)\r\n        {\r\n            state.blend_Src = GLConstants.ONE;\r\n        }\r\n        if (state.blend_Dst == null)\r\n        {\r\n            state.blend_Dst = GLConstants.ONE_MINUS_SRC_ALPHA;\r\n        }\r\n    }\r\n\r\n\r\n    //---------------------stencil\r\n    if (state.enableStencilTest == true)\r\n    {\r\n        if (state.stencilFunc == null)\r\n        {\r\n            state.stencilFunc = GLConstants.ALWAYS;\r\n        }\r\n        if (state.stencil_Fail == null)\r\n        {\r\n            state.stencil_Fail = GLConstants.KEEP;\r\n        }\r\n        if (state.stencil_FaileZpass == null)\r\n        {\r\n            state.stencil_FaileZpass = GLConstants.KEEP;\r\n        }\r\n        if (state.stencil_PassZfail == null)\r\n        {\r\n            state.stencil_PassZfail = GLConstants.REPLACE;\r\n        }\r\n        if (state.stencil_refValue == null)\r\n        {\r\n            state.stencil_refValue = 1;\r\n        }\r\n        if (state.stencil_Mask == null)\r\n        {\r\n            state.stencil_Mask = 0xFF;\r\n        }\r\n    }\r\n\r\n    return state;\r\n}","import { GLConstants } from \"./GLConstant\";\r\nimport { getGLTypeForTypedArray } from \"./Helper\";\r\nimport { ITextureInfo, ITexViewDataInfo, ITexHtmlDataInfo } from \"./type\";\r\n\r\n\r\nexport function createTextureFromTypedArray(gl: WebGLRenderingContext, data: ArrayBufferView, texOP: ITexViewDataInfo)\r\n{\r\n    deduceTextureTypedArrayOption(gl, data, texOP);\r\n    let tex = gl.createTexture();\r\n    gl.bindTexture(texOP.target, tex);\r\n    gl.texParameteri(texOP.target, gl.TEXTURE_MAG_FILTER, texOP.filter_max);\r\n    gl.texParameteri(texOP.target, gl.TEXTURE_MIN_FILTER, texOP.filter_min);\r\n    gl.texParameteri(texOP.target, gl.TEXTURE_WRAP_S, texOP.wrap_s);\r\n    gl.texParameteri(texOP.target, gl.TEXTURE_WRAP_T, texOP.wrap_t);\r\n\r\n    gl.texImage2D(texOP.target, 0, texOP.pixelFormat, texOP.width, texOP.height, 0, texOP.pixelFormat, texOP.pixelDatatype, data);\r\n}\r\n\r\nexport function createTextureFromHtml(gl: WebGLRenderingContext, data: HTMLImageElement | HTMLCanvasElement, texOP?: ITexHtmlDataInfo): WebGLTexture\r\n{\r\n    texOP = texOP != null ? texOP : {};\r\n    deduceTextureHtmlOption(gl, data, texOP);\r\n    let tex = gl.createTexture();\r\n    gl.bindTexture(texOP.target, tex);\r\n    gl.texParameteri(texOP.target, gl.TEXTURE_MAG_FILTER, texOP.filter_max);\r\n    gl.texParameteri(texOP.target, gl.TEXTURE_MIN_FILTER, texOP.filter_min);\r\n    gl.texParameteri(texOP.target, gl.TEXTURE_WRAP_S, texOP.wrap_s);\r\n    gl.texParameteri(texOP.target, gl.TEXTURE_WRAP_T, texOP.wrap_t);\r\n\r\n    gl.texImage2D(texOP.target, 0, texOP.pixelFormat, texOP.pixelFormat, texOP.pixelDatatype, data);\r\n\r\n    return tex;\r\n}\r\n\r\nfunction dedeuceBaseTextureOption(gl: WebGLRenderingContext, texOP: ITextureInfo)\r\n{\r\n    texOP.target = texOP.target ? texOP.target : GLConstants.TEXTURE_2D;\r\n    // texOP.wrap_s = texOP.wrap_s ? texOP.wrap_s : GLConstants.CLAMP_TO_EDGE;\r\n    // texOP.wrap_t = texOP.wrap_t ? texOP.wrap_t : GLConstants.CLAMP_TO_EDGE;\r\n    texOP.pixelFormat = texOP.pixelFormat ? texOP.pixelFormat : GLConstants.RGBA;\r\n\r\n    if (texOP.enableMipMap && canGenerateMipmap(gl, texOP.width, texOP.height))\r\n    {\r\n        texOP.enableMipMap = true;\r\n    } else\r\n    {\r\n        texOP.enableMipMap = false;\r\n    }\r\n\r\n    if (texOP.filter_max == null)\r\n    {\r\n        texOP.filter_max = texOP.enableMipMap ? GLConstants.LINEAR_MIPMAP_LINEAR : GLConstants.LINEAR\r\n    }\r\n    if (texOP.filter_min == null)\r\n    {\r\n        texOP.filter_min = texOP.enableMipMap ? GLConstants.LINEAR_MIPMAP_LINEAR : GLConstants.LINEAR;\r\n    }\r\n\r\n    if (texOP.wrap_s == null)\r\n    {\r\n        texOP.wrap_s = canWrap_reapeat(gl, texOP.width, texOP.height) ? GLConstants.REPEAT : GLConstants.CLAMP_TO_EDGE;\r\n    }\r\n    if (texOP.wrap_t == null)\r\n    {\r\n        texOP.wrap_t = canWrap_reapeat(gl, texOP.width, texOP.height) ? GLConstants.REPEAT : GLConstants.CLAMP_TO_EDGE;\r\n    }\r\n}\r\n\r\n\r\nexport function deduceTextureTypedArrayOption(gl: WebGLRenderingContext, data: ArrayBufferView, texOP: ITexViewDataInfo)\r\n{\r\n    dedeuceBaseTextureOption(gl, texOP);\r\n\r\n    if (texOP.pixelDatatype == null)\r\n    {\r\n        texOP.pixelDatatype = getGLTypeForTypedArray(data);\r\n    }\r\n}\r\n\r\nexport function deduceTextureHtmlOption(gl: WebGLRenderingContext, data: HTMLImageElement | HTMLCanvasElement, texOP: ITexHtmlDataInfo)\r\n{\r\n    texOP.width = data.width;\r\n    texOP.height = data.height;\r\n    dedeuceBaseTextureOption(gl, texOP);\r\n    if (texOP.pixelDatatype == null)\r\n    {\r\n        texOP.pixelDatatype = GLConstants.UNSIGNED_BYTE;\r\n    }\r\n}\r\n\r\n\r\n\r\nfunction isPowerOf2(value)\r\n{\r\n    return (value & (value - 1)) === 0;\r\n}\r\n\r\nfunction canGenerateMipmap(gl: WebGLRenderingContext, width: number, height: number)\r\n{\r\n    if (!gl.beWebgl2)\r\n    {\r\n        return isPowerOf2(width) && isPowerOf2(height);\r\n    }\r\n    return true;\r\n}\r\n\r\nfunction canWrap_reapeat(gl: WebGLRenderingContext, width: number, height: number)\r\n{\r\n    if (!gl.beWebgl2)\r\n    {\r\n        return isPowerOf2(width) && isPowerOf2(height);\r\n    }\r\n    return true;\r\n}","import { IcontextOptions, IGeometryInfo, IBassProgramInfo, IProgramState, IProgramInfo } from \"./type\";\r\nimport { setProgramState } from \"./State\";\r\n\r\ndeclare global\r\n{\r\n    interface WebGLVertexArrayObject extends WebGLObject\r\n    {\r\n    }\r\n\r\n    interface WebGLRenderingContext\r\n    {\r\n        __defineSetter__(arg0: string, arg1: (val: any) => void): any;\r\n        __defineGetter__(arg0: string, arg1: (val: any) => void): any;\r\n        beWebgl2: any;\r\n        addExtension(extName: string);\r\n        createVertexArray(): any;\r\n        bindVertexArray(vao?: WebGLVertexArrayObject | null): void;\r\n        deleteVertexArray(vao: WebGLVertexArrayObject): void;\r\n\r\n        vertexAttribDivisor(index: number, divisor: number): void;\r\n        drawElementsInstanced(mode: number, count: number, type: number, offset: number, instanceCount: number);\r\n        drawArraysInstanced(mode: number, first: number, count: number, instanceCount: number);\r\n    }\r\n}\r\n\r\nWebGLRenderingContext.prototype.addExtension = function (extname: string)\r\n{\r\n    let ext = this.getExtension(extname);\r\n    if (ext)\r\n    {\r\n        switch (extname)\r\n        {\r\n            case \"OES_vertex_array_object\":\r\n                this.bindVertexArray = ext.bindVertexArrayOES.bind(ext);\r\n                this.createVertexArray = ext.createVertexArrayOES.bind(ext);\r\n                this.deleteVertexArray = ext.deleteVertexArrayOES.bind(ext);\r\n                break;\r\n            case \"ANGLE_instanced_arrays\":\r\n                this.vertexAttribDivisor = ext.vertexAttribDivisorANGLE.bind(ext);\r\n                this.drawElementsInstanced = ext.drawElementsInstancedANGLE(ext);\r\n                this.drawArraysInstanced = ext.drawArraysInstancedANGLE(ext);\r\n                break;\r\n\r\n            default:\r\n                console.warn(\"还未处理\");\r\n                break;\r\n        }\r\n    }\r\n};\r\n\r\nWebGLRenderingContext.prototype.__defineGetter__(\"beWebgl2\", function ()\r\n{\r\n    if (this._bewebgl2 == null)\r\n    {\r\n        let version = this.getParameter(this.VERSION);\r\n        this._bewebgl2 = version.indexOf(\"WebGL 2.0\") === 0;\r\n        return this._bewebgl2;\r\n    }\r\n    return this._bewebgl2;\r\n});\r\nWebGLRenderingContext.prototype.__defineSetter__(\"beWebgl2\", function (val)\r\n{\r\n    this._bewebgl2 = val;\r\n});\r\n\r\nexport function initContext(canvas: HTMLCanvasElement, options: IcontextOptions = {}): WebGLRenderingContext\r\n{\r\n    let type = options.context || \"webgl\";\r\n    let gl = <WebGLRenderingContext>canvas.getContext(type, options.contextAtts);\r\n    // gl.beWebgl2 = (type == \"webgl2\");\r\n    if (options.extentions != null)\r\n    {\r\n        options.extentions.forEach((ext) =>\r\n        {\r\n            gl.addExtension(ext);\r\n        });\r\n    }\r\n\r\n    // canvas.addEventListener('webglcontextlost', function (e)\r\n    // {\r\n    //     console.log(e);\r\n    // }, false);\r\n\r\n    return gl;\r\n\r\n}\r\n\r\nexport function setBuffersAndAttributes(gl: WebGLRenderingContext, geometry: IGeometryInfo, program: IBassProgramInfo)\r\n{\r\n    for (let attName in program.attsDic)\r\n    {\r\n        program.attsDic[attName].setter(geometry.atts[attName]);\r\n    }\r\n    if (geometry.indices)\r\n    {\r\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, geometry.indices.buffer);\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * bing program 、set uniforms 、set webgl states\r\n * @param gl \r\n * @param program \r\n */\r\nexport function setProgram(gl: WebGLRenderingContext, program: IProgramInfo)\r\n{\r\n    gl.useProgram(program.program);\r\n\r\n    if (program.uniforms)\r\n    {\r\n        setProgramUniforms(program, program.uniforms);\r\n    }\r\n    if (program.states)\r\n    {\r\n        setProgramState(gl, program.states);\r\n    }\r\n}\r\n\r\n\r\nexport function setProgramUniforms(info: IBassProgramInfo, uniforms: { [name: string]: any })\r\n{\r\n    for (let key in uniforms)\r\n    {\r\n        let setter = info.uniformsDic[key].setter;\r\n        let value = uniforms[key];\r\n        setter(value);\r\n    }\r\n}\r\n\r\n\r\nexport function drawBufferInfo(gl: WebGLRenderingContext, geometry: IGeometryInfo, instanceCount?: number): void\r\n{\r\n    if (geometry.indices != null)\r\n    {\r\n        if (instanceCount != null)\r\n        {\r\n            gl.drawElementsInstanced(geometry.primitiveType, geometry.count, geometry.indices.componentDataType, geometry.offset || 0, instanceCount);\r\n        } else\r\n        {\r\n            gl.drawElements(geometry.primitiveType, geometry.count, geometry.indices.componentDataType, geometry.offset || 0);\r\n        }\r\n    } else\r\n    {\r\n        if (instanceCount != null)\r\n        {\r\n            gl.drawArraysInstanced(geometry.primitiveType, geometry.offset || 0, geometry.count, instanceCount);\r\n        } else\r\n        {\r\n            gl.drawArrays(geometry.primitiveType, geometry.offset || 0, geometry.count);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport * from './GLConstant';\r\nexport * from './GeometryInfo';\r\nexport * from './Helper';\r\nexport * from './ProgramInfo';\r\nexport * from './State';\r\nexport * from './Texture';\r\n\r\n\r\n\r\n","import { IVertexAttrib, TypedArray, TArrayInfo } from \"./type\";\r\nimport { GLConstants } from \"./GLConstant\";\r\nimport { getGLTypeForTypedArray, getArrayTypeForGLtype } from \"./Helper\";\r\n\r\n// export class VertexAtt implements IVertexAttrib\r\n// {\r\n//     name: string;\r\n//     buffer: WebGLBuffer;\r\n\r\n//     value: ArrayTypeInfo;\r\n//     componentSize: number;\r\n//     componentDataType: number;\r\n//     normalize: boolean;\r\n//     offsetInBytes: number;\r\n//     strideInBytes: number;\r\n//     divisor?: number;\r\n//     drawType: number;\r\n// }\r\n\r\nfunction deduceVertexAttArrayInfo(attName: string, data: TArrayInfo): IVertexAttrib\r\n{\r\n    let newData = {} as IVertexAttrib;\r\n    newData.name = attName;\r\n\r\n    if (data instanceof Array)\r\n    {\r\n        newData.value = new Float32Array(data);\r\n    } else if (ArrayBuffer.isView(data))\r\n    {\r\n        newData.value = data;\r\n    } else\r\n    {\r\n        let arraydata = data.value;\r\n        if (arraydata instanceof Array)\r\n        {\r\n            let type = data.componentDataType ? getArrayTypeForGLtype(data.componentDataType) : Float32Array;\r\n            newData.value = new type(arraydata);\r\n        } else\r\n        {\r\n            newData.value = arraydata;\r\n        }\r\n    }\r\n\r\n    let orginData = data as IVertexAttrib;\r\n\r\n    if (orginData.componentDataType == null)\r\n    {\r\n        newData.componentDataType = newData.value ? getGLTypeForTypedArray(newData.value as TypedArray) : GLConstants.FLOAT;\r\n    } else\r\n    {\r\n        newData.componentDataType = orginData.componentDataType;\r\n    }\r\n    if (orginData.length == null)\r\n    {\r\n        newData.length = newData.value ? (newData.value as TypedArray).length : null;\r\n    } else\r\n    {\r\n        newData.length = orginData.length;\r\n    }\r\n    newData.componentSize = orginData.componentSize ? orginData.componentSize : guessNumComponentsFromName(attName);\r\n    newData.normalize = orginData.normalize != null ? orginData.normalize : false;\r\n    newData.offsetInBytes = orginData.offsetInBytes ? orginData.offsetInBytes : 0;\r\n    newData.strideInBytes = orginData.strideInBytes ? orginData.strideInBytes : 0;\r\n    newData.drawType = orginData.drawType ? orginData.drawType : GLConstants.STATIC_DRAW;\r\n\r\n    return newData;\r\n}\r\n\r\nexport function createAttributeBufferInfo(gl: WebGLRenderingContext, attName: string, data: TArrayInfo): IVertexAttrib\r\n{\r\n    let vertexdata = deduceVertexAttArrayInfo(attName, data);\r\n\r\n    if (vertexdata.buffer == null)\r\n    {\r\n        let buffer = gl.createBuffer();\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\r\n        gl.bufferData(gl.ARRAY_BUFFER, vertexdata.value, vertexdata.drawType);\r\n\r\n        vertexdata.buffer = buffer;\r\n    }\r\n    return vertexdata;\r\n}\r\n\r\nconst uvRE = /uv/;\r\nconst colorRE = /color/;\r\nfunction guessNumComponentsFromName(name: string, length: number = null): number\r\n{\r\n    let numComponents;\r\n    if (uvRE.test(name))\r\n    {\r\n        numComponents = 2;\r\n    } else if (colorRE.test(name))\r\n    {\r\n        numComponents = 4;\r\n    } else\r\n    {\r\n        numComponents = 3;  // position, normals, indices ...\r\n    }\r\n    // if (length % numComponents > 0)\r\n    // {\r\n    //     throw \"Can not guess numComponents for attribute '\" + name + \"'. Tried \" +\r\n    //     numComponents + \" but \" + length +\r\n    //     \" values is not evenly divisible by \" + numComponents +\r\n    //     \". You should specify it.\";\r\n    // }\r\n    return numComponents;\r\n}","import { IVertexIndex, TypedArray, TArrayInfo } from \"./type\";\r\nimport { GLConstants } from \"./GLConstant\";\r\nimport { getGLTypeForTypedArray, getArrayTypeForGLtype } from \"./Helper\";\r\n\r\n// export class VertexIndex implements IVertexIndex\r\n// {\r\n//     value?: ArrayTypeInfo;\r\n//     componentDataType?: number;\r\n\r\n//     buffer: WebGLBuffer;\r\n//     drawType?: number;\r\n\r\n//     count: number;\r\n//     // submit: Function;\r\n// }\r\n\r\nfunction deduceVertexIndexArrayInfo(data: TArrayInfo): IVertexIndex\r\n{\r\n    let newData: IVertexIndex = {} as IVertexIndex;\r\n    newData.name = \"indices\";\r\n    if (data instanceof Array)\r\n    {\r\n        newData.value = new Uint16Array(data);\r\n    } else if (ArrayBuffer.isView(data))\r\n    {\r\n        newData.value = data;\r\n    } else\r\n    {\r\n        let arraydata = data.value;\r\n        if (arraydata instanceof Array)\r\n        {\r\n            let type = data.componentDataType ? getArrayTypeForGLtype(data.componentDataType) : Uint16Array;\r\n            newData.value = new type(arraydata);\r\n        } else\r\n        {\r\n            newData.value = arraydata;\r\n        }\r\n    }\r\n\r\n    let orginData = data as IVertexIndex;\r\n\r\n    if (orginData.componentDataType == null)\r\n    {\r\n        newData.componentDataType = newData.value ? getGLTypeForTypedArray(newData.value as TypedArray) : GLConstants.UNSIGNED_SHORT;\r\n    } else\r\n    {\r\n        newData.componentDataType = orginData.componentDataType;\r\n    }\r\n    if (orginData.length == null)\r\n    {\r\n        newData.length = newData.value ? (newData.value as TypedArray).length : null;\r\n    } else\r\n    {\r\n        newData.length = orginData.length;\r\n    }\r\n    newData.drawType = orginData.drawType ? newData.drawType : GLConstants.STATIC_DRAW;\r\n\r\n\r\n    if (newData.length == null)\r\n    {\r\n        throw \"can not deduce geometry Indices length.\";\r\n    }\r\n\r\n    // vertexData.count = newData.indexCount ? newData.indexCount : vertexData.length;\r\n    return newData;\r\n}\r\n\r\nexport function createIndexBufferInfo(gl: WebGLRenderingContext, data: TArrayInfo): IVertexIndex\r\n{\r\n    let vertexdata = deduceVertexIndexArrayInfo(data);\r\n    if (vertexdata.buffer == null)\r\n    {\r\n        let buffer = gl.createBuffer();\r\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, buffer);\r\n        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, vertexdata.value, vertexdata.drawType);\r\n        vertexdata.buffer = buffer;\r\n    }\r\n    return vertexdata;\r\n}\r\n"],"sourceRoot":""}