{"version":3,"file":"dome.js","sources":["../src/Helper.ts","../src/vertexIndex.ts","../src/vertexAttribute.ts","../src/state.ts","../src/programInfo.ts","../src/GeometryInfo.ts","../src/ProgramInfo.ts","../src/Texture.ts","../src/State.ts","../src/twebgl.ts","../examples/matwithTex.ts","../examples/main.ts"],"sourcesContent":["/* DataType */\r\nconst BYTE = 0x1400;\r\nconst UNSIGNED_BYTE = 0x1401;\r\nconst SHORT = 0x1402;\r\nconst UNSIGNED_SHORT = 0x1403;\r\nconst INT = 0x1404;\r\nconst UNSIGNED_INT = 0x1405;\r\nconst FLOAT = 0x1406;\r\nconst UNSIGNED_SHORT_4_4_4_4 = 0x8033;\r\nconst UNSIGNED_SHORT_5_5_5_1 = 0x8034;\r\nconst UNSIGNED_SHORT_5_6_5 = 0x8363;\r\nconst HALF_FLOAT = 0x140b;\r\nconst UNSIGNED_INT_2_10_10_10_REV = 0x8368;\r\nconst UNSIGNED_INT_10F_11F_11F_REV = 0x8c3b;\r\nconst UNSIGNED_INT_5_9_9_9_REV = 0x8c3e;\r\nconst FLOAT_32_UNSIGNED_INT_24_8_REV = 0x8dad;\r\nconst UNSIGNED_INT_24_8 = 0x84fa;\r\n\r\nconst glTypeToTypedArray: { [gltype: number]: any } = {};\r\n{\r\n    const tt = glTypeToTypedArray;\r\n    tt[BYTE] = Int8Array;\r\n    tt[UNSIGNED_BYTE] = Uint8Array;\r\n    tt[SHORT] = Int16Array;\r\n    tt[UNSIGNED_SHORT] = Uint16Array;\r\n    tt[INT] = Int32Array;\r\n    tt[UNSIGNED_INT] = Uint32Array;\r\n    tt[FLOAT] = Float32Array;\r\n    tt[UNSIGNED_SHORT_4_4_4_4] = Uint16Array;\r\n    tt[UNSIGNED_SHORT_5_5_5_1] = Uint16Array;\r\n    tt[UNSIGNED_SHORT_5_6_5] = Uint16Array;\r\n    tt[HALF_FLOAT] = Uint16Array;\r\n    tt[UNSIGNED_INT_2_10_10_10_REV] = Uint32Array;\r\n    tt[UNSIGNED_INT_10F_11F_11F_REV] = Uint32Array;\r\n    tt[UNSIGNED_INT_5_9_9_9_REV] = Uint32Array;\r\n    tt[FLOAT_32_UNSIGNED_INT_24_8_REV] = Uint32Array;\r\n    tt[UNSIGNED_INT_24_8] = Uint32Array;\r\n}\r\n\r\n/**\r\n * Get the GL type for a typedArray\r\n */\r\nexport function getGLTypeForTypedArray(typedArray: ArrayBufferView): number {\r\n    if (typedArray instanceof Int8Array) {\r\n        return BYTE;\r\n    }\r\n    if (typedArray instanceof Uint8Array) {\r\n        return UNSIGNED_BYTE;\r\n    }\r\n    if (typedArray instanceof Uint8ClampedArray) {\r\n        return UNSIGNED_BYTE;\r\n    }\r\n    if (typedArray instanceof Int16Array) {\r\n        return SHORT;\r\n    }\r\n    if (typedArray instanceof Uint16Array) {\r\n        return UNSIGNED_SHORT;\r\n    }\r\n    if (typedArray instanceof Int32Array) {\r\n        return INT;\r\n    }\r\n    if (typedArray instanceof Uint32Array) {\r\n        return UNSIGNED_INT;\r\n    }\r\n    if (typedArray instanceof Float32Array) {\r\n        return FLOAT;\r\n    }\r\n    throw \"unsupported typed array to gl type\";\r\n}\r\n\r\nexport function getArrayTypeForGLtype(glType: number) {\r\n    if (glTypeToTypedArray[glType] != null) {\r\n        return glTypeToTypedArray[glType];\r\n    }\r\n    throw \"unsupported gltype to array type\";\r\n}\r\n\r\nexport function getbytesForGLtype(glType: number) {\r\n    if (glTypeToTypedArray[glType]) {\r\n        return glTypeToTypedArray[glType].BYTES_PER_ELEMENT;\r\n    }\r\n    throw \"unsupported gltype to bytesPerElement\";\r\n}\r\n\r\nexport function getTypedArray(data: number | number[], gltype: number): ArrayBufferView {\r\n    let type = typeof data;\r\n    if (type == \"number\") {\r\n        let type = getArrayTypeForGLtype(gltype);\r\n        return new type(data as number);\r\n    } else if (data instanceof Array) {\r\n        let type = getArrayTypeForGLtype(gltype);\r\n        return new type(data);\r\n    }\r\n    return null;\r\n}\r\n\r\nexport function float4Equal(lhs: Float32Array, rhs: Float32Array): boolean {\r\n    return lhs[0] == rhs[0] || lhs[1] == rhs[1] || lhs[2] == rhs[2];\r\n}\r\n","import { IvertexIndex, TypedArray, IviewArr } from \"./Type\";\r\nimport { getGLTypeForTypedArray, getArrayTypeForGLtype } from \"./Helper\";\r\n\r\nconst UNSIGNED_SHORT = 0x1403;\r\nconst STATIC_DRAW = 0x88e4;\r\nexport class VertexIndex implements IvertexIndex {\r\n    name: string;\r\n    viewBuffer?: ArrayBufferView;\r\n    count?: number;\r\n\r\n    componentDataType: number;\r\n\r\n    glBuffer: WebGLBuffer;\r\n    drawType: number;\r\n\r\n    static fromViewArrayInfo(data: IviewArr): VertexIndex {\r\n        let newData = new VertexIndex();\r\n        newData.name = \"indices\";\r\n        if (data instanceof Array) {\r\n            newData.viewBuffer = new Uint16Array(data);\r\n        } else if (ArrayBuffer.isView(data)) {\r\n            newData.viewBuffer = data;\r\n        } else {\r\n            let arraydata = data.value;\r\n            if (arraydata instanceof Array) {\r\n                let type = data.componentDataType ? getArrayTypeForGLtype(data.componentDataType) : Uint16Array;\r\n                newData.viewBuffer = new type(arraydata);\r\n            } else {\r\n                newData.viewBuffer = arraydata;\r\n            }\r\n        }\r\n\r\n        let orginData = data as IvertexIndex;\r\n\r\n        if (orginData.componentDataType == null) {\r\n            newData.componentDataType = newData.viewBuffer\r\n                ? getGLTypeForTypedArray(newData.viewBuffer)\r\n                : UNSIGNED_SHORT;\r\n        } else {\r\n            newData.componentDataType = orginData.componentDataType;\r\n        }\r\n        if (orginData.count == null) {\r\n            newData.count = newData.viewBuffer ? (newData.viewBuffer as TypedArray).length : null;\r\n        } else {\r\n            newData.count = orginData.count;\r\n        }\r\n        newData.drawType = orginData.drawType ? newData.drawType : STATIC_DRAW;\r\n\r\n        if (newData.count == null) {\r\n            throw new Error(\"can not deduce geometry Indices count.\");\r\n        }\r\n\r\n        // vertexData.count = newData.indexCount ? newData.indexCount : vertexData.length;\r\n        return newData;\r\n    }\r\n}\r\n\r\nexport function createIndexBufferInfo(gl: WebGLRenderingContext, data: IviewArr): IvertexIndex {\r\n    let vertexdata = VertexIndex.fromViewArrayInfo(data);\r\n    if (vertexdata.glBuffer == null) {\r\n        let buffer = gl.createBuffer();\r\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, buffer);\r\n        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, vertexdata.viewBuffer, vertexdata.drawType);\r\n        vertexdata.glBuffer = buffer;\r\n    }\r\n    return vertexdata;\r\n}\r\n\r\nexport function setIndexBuffer(gl: WebGLRenderingContext, indexbuffer: IvertexIndex) {\r\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, indexbuffer.glBuffer);\r\n}\r\n","import { IvertexAttrib, IviewArr, IviewData } from \"./Type\";\r\nimport { getGLTypeForTypedArray, getArrayTypeForGLtype, getbytesForGLtype } from \"./Helper\";\r\n\r\nconst FLOAT = 0x1406;\r\nconst STATIC_DRAW = 0x88e4;\r\n\r\nexport class VertexAtt implements IvertexAttrib {\r\n    name: string;\r\n    glBuffer: WebGLBuffer;\r\n\r\n    viewBuffer?: ArrayBufferView;\r\n    count?: number;\r\n\r\n    componentSize: number;\r\n    componentDataType: number;\r\n    normalize: boolean;\r\n    bytesOffset: number;\r\n    bytesStride: number;\r\n    divisor?: number;\r\n    drawType: number;\r\n\r\n    static fromViewArrayInfo(attName: string, data: IviewArr): VertexAtt {\r\n        let newData = new VertexAtt();\r\n        newData.name = attName;\r\n\r\n        if (data instanceof Array) {\r\n            newData.viewBuffer = new Float32Array(data);\r\n        } else if (ArrayBuffer.isView(data)) {\r\n            newData.viewBuffer = data;\r\n        } else {\r\n            let arraydata = data.value;\r\n            if (arraydata instanceof Array) {\r\n                let type = data.componentDataType ? getArrayTypeForGLtype(data.componentDataType) : Float32Array;\r\n                newData.viewBuffer = new type(arraydata);\r\n            } else {\r\n                newData.viewBuffer = arraydata;\r\n            }\r\n        }\r\n\r\n        let orginData = data as IviewData;\r\n\r\n        if (orginData.componentDataType == null) {\r\n            newData.componentDataType = newData.viewBuffer ? getGLTypeForTypedArray(newData.viewBuffer) : FLOAT;\r\n        } else {\r\n            newData.componentDataType = orginData.componentDataType;\r\n        }\r\n\r\n        newData.componentSize = orginData.componentSize ? orginData.componentSize : guessNumComponentsFromName(attName);\r\n        newData.normalize = orginData.normalize != null ? orginData.normalize : false;\r\n        newData.bytesOffset = orginData.bytesOffset ? orginData.bytesOffset : 0;\r\n        newData.bytesStride = orginData.bytesStride ? orginData.bytesStride : 0;\r\n        newData.drawType = orginData.drawType ? orginData.drawType : STATIC_DRAW;\r\n        newData.divisor = orginData.divisor;\r\n        newData.glBuffer = orginData.glBuffer;\r\n\r\n        if (orginData.count == null) {\r\n            let elementBytes = getbytesForGLtype(newData.componentDataType) * newData.componentSize;\r\n            newData.count = newData.viewBuffer ? newData.viewBuffer.byteLength / elementBytes : undefined;\r\n        } else {\r\n            newData.count = orginData.count;\r\n        }\r\n\r\n        return newData;\r\n    }\r\n}\r\n\r\nexport function createAttributeBufferInfo(gl: WebGLRenderingContext, attName: string, data: IviewArr): IvertexAttrib {\r\n    let vertexdata = VertexAtt.fromViewArrayInfo(attName, data);\r\n\r\n    if (vertexdata.glBuffer == null) {\r\n        let buffer = gl.createBuffer();\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\r\n        gl.bufferData(gl.ARRAY_BUFFER, vertexdata.viewBuffer, vertexdata.drawType);\r\n\r\n        vertexdata.glBuffer = buffer;\r\n    }\r\n    return vertexdata;\r\n}\r\n\r\nexport function updateAttributeBufferInfo(\r\n    gl: WebGLRenderingContext,\r\n    att: IvertexAttrib,\r\n    value: ArrayBufferView,\r\n): IvertexAttrib {\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, att.glBuffer);\r\n    gl.bufferData(gl.ARRAY_BUFFER, value, att.drawType);\r\n    att.viewBuffer = value;\r\n    return att;\r\n}\r\n\r\nexport function setAttributeBuffer(gl: WebGLRenderingContext, value: IvertexAttrib, location: number) {\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, value.glBuffer);\r\n    gl.enableVertexAttribArray(location);\r\n    gl.vertexAttribPointer(\r\n        location,\r\n        value.componentSize,\r\n        value.componentDataType,\r\n        value.normalize,\r\n        value.bytesStride,\r\n        value.bytesOffset,\r\n    );\r\n    if (value.divisor !== undefined) {\r\n        gl.vertexAttribDivisor(location, value.divisor);\r\n    }\r\n}\r\n\r\nconst uvRE = /(uv|texcoord)/;\r\nconst colorRE = /color/;\r\nfunction guessNumComponentsFromName(name: string, length: number = null): number {\r\n    let numComponents;\r\n    name = name.toLowerCase();\r\n    if (uvRE.test(name)) {\r\n        numComponents = 2;\r\n    } else if (colorRE.test(name)) {\r\n        numComponents = 4;\r\n    } else {\r\n        numComponents = 3; // position, normals, indices ...\r\n    }\r\n    // if (length % numComponents > 0)\r\n    // {\r\n    //     throw \"Can not guess numComponents for attribute '\" + name + \"'. Tried \" +\r\n    //     numComponents + \" but \" + length +\r\n    //     \" values is not evenly divisible by \" + numComponents +\r\n    //     \". You should specify it.\";\r\n    // }\r\n    return numComponents;\r\n}\r\n","import { IprogramState, IgeometryInfo } from \"./Type\";\r\n\r\nimport { IfboInfo } from \"./FrameBuffer\";\r\n\r\ndeclare global {\r\n    interface WebGLRenderingContext {\r\n        _cachedFrameBuffer: IfboInfo;\r\n\r\n        _cachedGeometry: IgeometryInfo;\r\n        _cachedProgram: WebGLProgram;\r\n        _cachedEnableCullFace: boolean;\r\n        _cachedCullFace: boolean;\r\n        _cachedDepthWrite: boolean;\r\n        _cachedDepthTest: boolean;\r\n        _cachedEnableBlend: boolean;\r\n        _cachedBlendEquation: number;\r\n        _cachedBlendFuncSrc: number;\r\n        _cachedBlendFuncDst: number;\r\n        _cachedEnableStencilTest: boolean;\r\n        _cachedStencilFunc: number;\r\n        _cachedStencilRefValue: number;\r\n        _cachedStencilMask: number;\r\n        _cachedStencilFail: number;\r\n        _cachedStencilPassZfail: number;\r\n        _cachedStencilFaileZpass: number;\r\n\r\n        _cachedViewPortX: number;\r\n        _cachedViewPortY: number;\r\n        _cachedViewPortWidth: number;\r\n        _cachedViewPortHeight: number;\r\n\r\n        _cacheColorMaskR: boolean;\r\n        _cacheColorMaskG: boolean;\r\n        _cacheColorMaskB: boolean;\r\n        _cacheColorMaskA: boolean;\r\n    }\r\n}\r\nexport function setClear(\r\n    gl: WebGLRenderingContext,\r\n    clearDepth: boolean,\r\n    clearColor: Float32Array | null,\r\n    clearStencil: boolean = false,\r\n) {\r\n    let cleartag = 0;\r\n    if (clearDepth) {\r\n        gl.clearDepth(1.0);\r\n        cleartag |= gl.DEPTH_BUFFER_BIT;\r\n    }\r\n    if (clearColor) {\r\n        gl.clearColor(clearColor[0], clearColor[1], clearColor[2], clearColor[3]);\r\n        cleartag |= gl.COLOR_BUFFER_BIT;\r\n    }\r\n    if (clearStencil) {\r\n        gl.clearStencil(0);\r\n        cleartag |= gl.STENCIL_BUFFER_BIT;\r\n    }\r\n    if (cleartag != 0) {\r\n        gl.clear(cleartag);\r\n    }\r\n}\r\n\r\nexport function setViewPortWithCached(gl: WebGLRenderingContext, x: number, y: number, width: number, height: number) {\r\n    let bechanged =\r\n        gl._cachedViewPortX != x ||\r\n        gl._cachedViewPortY != y ||\r\n        gl._cachedViewPortWidth != width ||\r\n        gl._cachedViewPortHeight != height;\r\n    if (bechanged) {\r\n        gl.viewport(x, y, width, height);\r\n        gl._cachedViewPortX = x;\r\n        gl._cachedViewPortY = y;\r\n        gl._cachedViewPortWidth = width;\r\n        gl._cachedViewPortHeight = height;\r\n    }\r\n}\r\nexport function setViewPort(gl: WebGLRenderingContext, x: number, y: number, width: number, height: number) {\r\n    gl.viewport(x, y, width, height);\r\n}\r\nexport function setColorMaskWithCached(\r\n    gl: WebGLRenderingContext,\r\n    maskR: boolean,\r\n    maskG: boolean,\r\n    maskB: boolean,\r\n    maskA: boolean,\r\n) {\r\n    if (\r\n        gl._cacheColorMaskR != maskR ||\r\n        gl._cacheColorMaskG != maskG ||\r\n        gl._cacheColorMaskB != maskB ||\r\n        gl._cacheColorMaskA != maskA\r\n    ) {\r\n        gl.colorMask(maskR, maskG, maskB, maskA);\r\n        gl._cacheColorMaskR = maskR;\r\n        gl._cacheColorMaskG = maskG;\r\n        gl._cacheColorMaskB = maskB;\r\n        gl._cacheColorMaskA = maskA;\r\n    }\r\n}\r\n\r\nexport function setCullFaceState(gl: WebGLRenderingContext, enableCullFace: boolean = true, cullBack: boolean = true) {\r\n    if (enableCullFace) {\r\n        gl.enable(gl.CULL_FACE);\r\n        gl.cullFace(cullBack ? gl.BACK : gl.FRONT);\r\n    } else {\r\n        gl.disable(gl.CULL_FACE);\r\n    }\r\n}\r\n\r\nexport function setCullFaceStateWithCached(\r\n    gl: WebGLRenderingContext,\r\n    enableCullFace: boolean = true,\r\n    cullBack: boolean = true,\r\n) {\r\n    if (gl._cachedEnableCullFace != enableCullFace) {\r\n        gl._cachedEnableCullFace = enableCullFace;\r\n\r\n        if (enableCullFace) {\r\n            gl.enable(gl.CULL_FACE);\r\n\r\n            if (gl._cachedCullFace != cullBack) {\r\n                gl._cachedCullFace = cullBack;\r\n\r\n                gl.cullFace(cullBack ? gl.BACK : gl.FRONT);\r\n            }\r\n        } else {\r\n            gl.disable(gl.CULL_FACE);\r\n        }\r\n    } else {\r\n        if (gl._cachedCullFace != cullBack) {\r\n            gl._cachedCullFace = cullBack;\r\n\r\n            gl.cullFace(cullBack ? gl.BACK : gl.FRONT);\r\n        }\r\n    }\r\n}\r\n\r\nexport function setDepthState(gl: WebGLRenderingContext, depthWrite: boolean = true, depthTest: boolean = true) {\r\n    gl.depthMask(depthWrite);\r\n    if (depthTest) {\r\n        gl.enable(gl.DEPTH_TEST);\r\n    } else {\r\n        gl.disable(gl.DEPTH_TEST);\r\n    }\r\n}\r\n\r\nexport function setDepthStateWithCached(\r\n    gl: WebGLRenderingContext,\r\n    depthWrite: boolean = true,\r\n    depthTest: boolean = true,\r\n) {\r\n    if (gl._cachedDepthWrite != depthWrite) {\r\n        gl._cachedDepthWrite = depthWrite;\r\n        gl.depthMask(depthWrite);\r\n    }\r\n    if (gl._cachedDepthTest != depthTest) {\r\n        gl._cachedDepthTest = depthTest;\r\n        if (depthTest) {\r\n            gl.enable(gl.DEPTH_TEST);\r\n        } else {\r\n            gl.disable(gl.DEPTH_TEST);\r\n        }\r\n    }\r\n}\r\n\r\nexport function setBlendState(\r\n    gl: WebGLRenderingContext,\r\n    enableBlend: boolean = false,\r\n    blendEquation: number = gl.FUNC_ADD,\r\n    blendSrc: number = gl.ONE,\r\n    blendDst: number = gl.ONE_MINUS_SRC_ALPHA,\r\n) {\r\n    if (enableBlend) {\r\n        gl.enable(gl.BLEND);\r\n        gl.blendEquation(blendEquation);\r\n        gl.blendFunc(blendSrc, blendDst);\r\n    }\r\n}\r\n\r\nexport function setBlendStateWithCached(\r\n    gl: WebGLRenderingContext,\r\n    enableBlend: boolean = false,\r\n    blendEquation: number = gl.FUNC_ADD,\r\n    blendSrc: number = gl.ONE,\r\n    blendDst: number = gl.ONE_MINUS_SRC_ALPHA,\r\n) {\r\n    if (gl._cachedEnableBlend != enableBlend) {\r\n        gl._cachedEnableBlend = enableBlend;\r\n        if (enableBlend) {\r\n            gl.enable(gl.BLEND);\r\n\r\n            if (gl._cachedBlendEquation != blendEquation) {\r\n                gl._cachedBlendEquation = blendEquation;\r\n                gl.blendEquation(blendEquation);\r\n            }\r\n            if (gl._cachedBlendFuncSrc != blendSrc || gl._cachedBlendFuncDst != blendDst) {\r\n                gl._cachedBlendFuncSrc = blendSrc;\r\n                gl._cachedBlendFuncDst = blendDst;\r\n                gl.blendFunc(blendSrc, blendDst);\r\n            }\r\n        } else {\r\n            gl.disable(gl.BLEND);\r\n        }\r\n    }\r\n}\r\nexport function setStencilState(\r\n    gl: WebGLRenderingContext,\r\n    enableStencilTest: boolean = false,\r\n    stencilFunc: number = gl.ALWAYS,\r\n    stencilRefValue: number = 1,\r\n    stencilMask: number = 0xff,\r\n    stencilFail: number = gl.KEEP,\r\n    stencilPassZfail: number = gl.REPLACE,\r\n    stencilFaileZpass: number = gl.KEEP,\r\n) {\r\n    if (enableStencilTest) {\r\n        gl.enable(gl.STENCIL_TEST);\r\n        gl.stencilFunc(stencilFunc, stencilRefValue, stencilMask);\r\n        gl.stencilOp(stencilFail, stencilPassZfail, stencilFaileZpass);\r\n    }\r\n}\r\nexport function setStencilStateWithCached(\r\n    gl: WebGLRenderingContext,\r\n    enableStencilTest: boolean = false,\r\n    stencilFunc: number = gl.ALWAYS,\r\n    stencilRefValue: number = 1,\r\n    stencilMask: number = 0xff,\r\n    stencilFail: number = gl.KEEP,\r\n    stencilPassZfail: number = gl.REPLACE,\r\n    stencilFaileZpass: number = gl.KEEP,\r\n) {\r\n    if (gl._cachedEnableStencilTest != enableStencilTest) {\r\n        gl._cachedEnableStencilTest = enableStencilTest;\r\n        gl.enable(gl.STENCIL_TEST);\r\n        if (\r\n            gl._cachedStencilFunc != stencilFunc ||\r\n            gl._cachedStencilRefValue != stencilRefValue ||\r\n            gl._cachedStencilMask != stencilMask\r\n        ) {\r\n            gl._cachedStencilFunc = stencilFunc;\r\n            gl._cachedStencilRefValue = stencilRefValue;\r\n            gl._cachedStencilMask = stencilMask;\r\n            gl.stencilFunc(stencilFunc, stencilRefValue, stencilMask);\r\n        }\r\n\r\n        if (\r\n            gl._cachedStencilFail != stencilFail ||\r\n            gl._cachedStencilPassZfail != stencilPassZfail ||\r\n            gl._cachedStencilFaileZpass != stencilFaileZpass\r\n        ) {\r\n            gl._cachedStencilFail = stencilFail;\r\n            gl._cachedStencilPassZfail = stencilPassZfail;\r\n            gl._cachedStencilFaileZpass = stencilFaileZpass;\r\n            gl.stencilOp(stencilFail, stencilPassZfail, stencilFaileZpass);\r\n        }\r\n    }\r\n}\r\n\r\nexport function setProgramStates(gl: WebGLRenderingContext, state: IprogramState) {\r\n    //---------------------------cullface\r\n    setCullFaceState(gl, state.enableCullFace, state.cullBack);\r\n    //----------------depth\r\n    setDepthState(gl, state.depthWrite, state.depthTest);\r\n    //------------------------blend\r\n    setBlendState(gl, state.enableBlend, state.blendEquation, state.blendSrc, state.blendDst);\r\n    //-------------------------stencil\r\n    setStencilState(\r\n        gl,\r\n        state.enableStencilTest,\r\n        state.stencilFunc,\r\n        state.stencilRefValue,\r\n        state.stencilMask,\r\n        state.stencilFail,\r\n        state.stencilPassZfail,\r\n        state.stencilFaileZpass,\r\n    );\r\n}\r\n\r\nexport function setProgramStatesWithCached(gl: WebGLRenderingContext, state: IprogramState) {\r\n    //---------------------------cullface\r\n    setCullFaceStateWithCached(gl, state.enableCullFace, state.cullBack);\r\n    //----------------depth\r\n    setDepthStateWithCached(gl, state.depthWrite, state.depthTest);\r\n    //------------------------blend\r\n    setBlendStateWithCached(gl, state.enableBlend, state.blendEquation, state.blendSrc, state.blendDst);\r\n    //-------------------------stencil\r\n    setStencilStateWithCached(\r\n        gl,\r\n        state.enableStencilTest,\r\n        state.stencilFunc,\r\n        state.stencilRefValue,\r\n        state.stencilMask,\r\n        state.stencilFail,\r\n        state.stencilPassZfail,\r\n        state.stencilFaileZpass,\r\n    );\r\n}\r\n\r\n// /**\r\n//  *\r\n//  * @param state 原始 webgl state\r\n//  */\r\n// // state 是给每个物体 render用的，是不想受前一个物体render影响，所以需要推断出完整的 webgl state，缺失的按照默认值\r\n// function deduceFullShderState(state: IprogramState): IprogramState {\r\n//     //----------------------------cull face\r\n//     if (state.enableCullFace == null) {\r\n//         state.enableCullFace = true;\r\n//     }\r\n//     if (state.enableCullFace) {\r\n//         if (state.cullBack == null) {\r\n//             state.cullBack = true;\r\n//         }\r\n//     }\r\n\r\n//     //------------------depth\r\n//     if (state.depthWrite == null) {\r\n//         state.depthWrite = true;\r\n//     }\r\n//     if (state.depthTest == null) {\r\n//         state.depthTest = true;\r\n//     }\r\n//     if (state.depthTest) {\r\n//         if (state.depthTestFuc == null) {\r\n//             state.depthTestFuc = GlConstants.LEQUAL;\r\n//         }\r\n//     }\r\n\r\n//     //------------------ blend\r\n//     if (state.enableBlend == true) {\r\n//         if (state.blendEquation == null) {\r\n//             state.blendEquation = GlConstants.FUNC_ADD;\r\n//         }\r\n//         if (state.blendSrc == null) {\r\n//             state.blendSrc = GlConstants.ONE;\r\n//         }\r\n//         if (state.blendDst == null) {\r\n//             state.blendDst = GlConstants.ONE_MINUS_SRC_ALPHA;\r\n//         }\r\n//     }\r\n\r\n//     //---------------------stencil\r\n//     if (state.enableStencilTest == true) {\r\n//         if (state.stencilFunc == null) {\r\n//             state.stencilFunc = GlConstants.ALWAYS;\r\n//         }\r\n//         if (state.stencilFail == null) {\r\n//             state.stencilFail = GlConstants.KEEP;\r\n//         }\r\n//         if (state.stencilFaileZpass == null) {\r\n//             state.stencilFaileZpass = GlConstants.KEEP;\r\n//         }\r\n//         if (state.stencilPassZfail == null) {\r\n//             state.stencilPassZfail = GlConstants.REPLACE;\r\n//         }\r\n//         if (state.stencilRefValue == null) {\r\n//             state.stencilRefValue = 1;\r\n//         }\r\n//         if (state.stencilMask == null) {\r\n//             state.stencilMask = 0xff;\r\n//         }\r\n//     }\r\n\r\n//     return state;\r\n// }\r\n","import {\r\n    IbassProgramInfo,\r\n    IvertexAttrib,\r\n    IattributeInfo,\r\n    IuniformInfo,\r\n    IprogramOptions,\r\n    IprogramInfo,\r\n    IbassProgramOption,\r\n    IprogramState,\r\n    ItextureInfo,\r\n} from \"./Type\";\r\nimport { setProgramStates, setProgramStatesWithCached } from \"./state\";\r\n\r\nexport enum ShaderTypeEnum {\r\n    VS,\r\n    FS,\r\n}\r\n\r\nexport function createProgramInfo(gl: WebGLRenderingContext, op: IprogramOptions): Program {\r\n    let bassProgram;\r\n    if (!(op.program instanceof BassProgram)) {\r\n        let bassprogramOp = op.program as IbassProgramOption;\r\n        bassProgram = createBassProgramInfo(gl, bassprogramOp.vs, bassprogramOp.fs, bassprogramOp.name);\r\n    } else {\r\n        bassProgram = op.program;\r\n    }\r\n    if (bassProgram) {\r\n        let info = new Program();\r\n        info.bassProgram = bassProgram;\r\n        info.uniforms = op.uniforms;\r\n        info.states = op.states;\r\n        return info;\r\n    } else {\r\n        return null;\r\n    }\r\n}\r\n\r\n/**\r\n * bing program 、set uniforms 、set webgl states\r\n * @param gl\r\n * @param program\r\n */\r\nexport function setProgram(gl: WebGLRenderingContext, program: IprogramInfo) {\r\n    gl.useProgram(program.bassProgram.program);\r\n\r\n    if (program.uniforms) {\r\n        setProgramUniforms(program.bassProgram, program.uniforms);\r\n    }\r\n    if (program.states) {\r\n        setProgramStates(gl, program.states);\r\n    }\r\n}\r\n\r\nexport function setProgramWithCached(gl: WebGLRenderingContext, program: IprogramInfo) {\r\n    if (gl._cachedProgram != program.bassProgram.program) {\r\n        gl._cachedProgram = program.bassProgram.program;\r\n\r\n        gl.useProgram(program.bassProgram.program);\r\n    }\r\n    if (program.uniforms) {\r\n        setProgramUniforms(program.bassProgram, program.uniforms);\r\n    }\r\n    if (program.states) {\r\n        setProgramStatesWithCached(gl, program.states);\r\n    }\r\n}\r\n\r\nexport function setProgramUniforms(info: IbassProgramInfo, uniforms: { [name: string]: any }) {\r\n    for (let key in uniforms) {\r\n        let setter = info.uniformsDic[key].setter;\r\n        let value = uniforms[key];\r\n        setter(value);\r\n    }\r\n}\r\nclass Program implements IprogramInfo {\r\n    bassProgram: IbassProgramInfo;\r\n    uniforms?: { [name: string]: any };\r\n    states?: IprogramState;\r\n}\r\n\r\nclass BassProgram implements IbassProgramInfo {\r\n    readonly id: number;\r\n    programName: string;\r\n    program: WebGLProgram;\r\n    uniformsDic: { [name: string]: IuniformInfo };\r\n    attsDic: { [name: string]: IattributeInfo };\r\n\r\n    constructor(\r\n        programName: string,\r\n        program: WebGLProgram,\r\n        uniformsDic: { [name: string]: IuniformInfo },\r\n        attsDic: { [name: string]: IattributeInfo },\r\n    ) {\r\n        this.id = BassProgram.nextID();\r\n        this.programName = programName;\r\n        this.program = program;\r\n        this.uniformsDic = uniformsDic;\r\n        this.attsDic = attsDic;\r\n    }\r\n\r\n    private static count = 0;\r\n    static nextID() {\r\n        return BassProgram.count++;\r\n    }\r\n}\r\n\r\nexport function createBassProgramInfo(gl: WebGLRenderingContext, vs: string, fs: string, name: string): BassProgram {\r\n    let vsShader = createShader(gl, ShaderTypeEnum.VS, vs, name + \"_vs\");\r\n    let fsShader = createShader(gl, ShaderTypeEnum.FS, fs, name + \"_fs\");\r\n    if (vsShader && fsShader) {\r\n        let item = gl.createProgram();\r\n        gl.attachShader(item, vsShader.shader);\r\n        gl.attachShader(item, fsShader.shader);\r\n        gl.linkProgram(item);\r\n        let check = gl.getProgramParameter(item, gl.LINK_STATUS);\r\n        if (check == false) {\r\n            let debguInfo =\r\n                \"ERROR: compile program Error!\" + \"VS:\" + vs + \"   FS:\" + fs + \"\\n\" + gl.getProgramInfoLog(item);\r\n            console.error(debguInfo);\r\n            gl.deleteProgram(item);\r\n            return null;\r\n        } else {\r\n            let attsInfo = getAttributesInfo(gl, item);\r\n            let uniformsInfo = getUniformsInfo(gl, item);\r\n            return new BassProgram(name, item, uniformsInfo, attsInfo);\r\n            // return { program: item, programName: name, uniformsDic: uniformsInfo, attsDic: attsInfo };\r\n        }\r\n    }\r\n}\r\n\r\nexport function getAttributesInfo(\r\n    gl: WebGLRenderingContext,\r\n    program: WebGLProgram,\r\n): { [attName: string]: IattributeInfo } {\r\n    let attdic: { [attName: string]: IattributeInfo } = {};\r\n    let numAttribs = gl.getProgramParameter(program, gl.ACTIVE_ATTRIBUTES);\r\n    for (let i = 0; i < numAttribs; i++) {\r\n        let attribInfo = gl.getActiveAttrib(program, i);\r\n        if (!attribInfo) break;\r\n        let attName = attribInfo.name;\r\n        let attlocation = gl.getAttribLocation(program, attName);\r\n        let func = getAttributeSetter(gl, attlocation);\r\n\r\n        attdic[attName] = { name: attName, location: attlocation, setter: func };\r\n    }\r\n    return attdic;\r\n}\r\n\r\nexport function getUniformsInfo(gl: WebGLRenderingContext, program: WebGLProgram): { [name: string]: IuniformInfo } {\r\n    let uniformDic: { [name: string]: IuniformInfo } = {};\r\n    let numUniforms = gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS);\r\n\r\n    let bindpoint = 0;\r\n    for (let i = 0; i < numUniforms; i++) {\r\n        let uniformInfo = gl.getActiveUniform(program, i);\r\n        if (!uniformInfo) break;\r\n\r\n        let name = uniformInfo.name;\r\n        let type = uniformInfo.type;\r\n        let location = gl.getUniformLocation(program, name);\r\n\r\n        let beArray = false;\r\n        // remove the array suffix.\r\n        if (name.substr(-3) === \"[0]\") {\r\n            beArray = true;\r\n            // name = name.substr(0, name.length - 3);\r\n        }\r\n        if (location == null) continue;\r\n\r\n        let func = getUniformSetter(gl, type, beArray, location, bindpoint);\r\n        uniformDic[name] = { name: name, location: location, type: type, setter: func };\r\n    }\r\n    return uniformDic;\r\n}\r\n\r\nconst FRAGMENT_SHADER = 0x8b30;\r\nconst VERTEX_SHADER = 0x8b31;\r\n\r\nexport function createShader(gl: WebGLRenderingContext, type: ShaderTypeEnum, source: string, name: string = null) {\r\n    let target = type == ShaderTypeEnum.VS ? VERTEX_SHADER : FRAGMENT_SHADER;\r\n    let item = gl.createShader(target);\r\n\r\n    gl.shaderSource(item, source);\r\n    gl.compileShader(item);\r\n    let check = gl.getShaderParameter(item, gl.COMPILE_STATUS);\r\n    if (check == false) {\r\n        let debug =\r\n            type == ShaderTypeEnum.VS ? \"ERROR: compile  VS Shader Error! VS:\" : \"ERROR: compile FS Shader Error! FS:\";\r\n        debug = debug + name + \".\\n\";\r\n        console.error(debug + gl.getShaderInfoLog(item));\r\n        gl.deleteShader(item);\r\n        return null;\r\n    } else {\r\n        return { shaderType: type, shaderName: name, shader: item };\r\n    }\r\n}\r\n\r\nexport function getUniformSetter(\r\n    gl: WebGLRenderingContext,\r\n    uniformType: number,\r\n    beArray: boolean,\r\n    location: WebGLUniformLocation,\r\n    bindpoint: number,\r\n) {\r\n    switch (uniformType) {\r\n        case gl.FLOAT:\r\n            if (beArray) {\r\n                return (value: any) => {\r\n                    gl.uniform1fv(location, value);\r\n                };\r\n            } else {\r\n                return (value: any) => {\r\n                    gl.uniform1f(location, value);\r\n                };\r\n            }\r\n            break;\r\n        case gl.FLOAT_VEC2:\r\n            return (value: Float32Array) => {\r\n                gl.uniform2fv(location, value);\r\n            };\r\n            break;\r\n        case gl.FLOAT_VEC3:\r\n            return (value: Float32Array) => {\r\n                gl.uniform3fv(location, value);\r\n            };\r\n            break;\r\n        case gl.FLOAT_VEC4:\r\n            return (value: Float32Array) => {\r\n                gl.uniform4fv(location, value);\r\n            };\r\n            break;\r\n        case gl.INT:\r\n        case gl.BOOL:\r\n            if (beArray) {\r\n                return (value: number[]) => {\r\n                    gl.uniform1iv(location, value);\r\n                };\r\n            } else {\r\n                return (value: number) => {\r\n                    gl.uniform1i(location, value);\r\n                };\r\n            }\r\n            break;\r\n        case gl.INT_VEC2:\r\n        case gl.BOOL_VEC2:\r\n            return (value: number[]) => {\r\n                gl.uniform2iv(location, value);\r\n            };\r\n            break;\r\n        case gl.INT_VEC3:\r\n        case gl.BOOL_VEC3:\r\n            return (value: number[]) => {\r\n                gl.uniform3iv(location, value);\r\n            };\r\n            break;\r\n        case gl.INT_VEC4:\r\n        case gl.BOOL_VEC4:\r\n            return (value: number[]) => {\r\n                gl.uniform4fv(location, value);\r\n            };\r\n            break;\r\n        case gl.FLOAT_MAT2:\r\n            return (value: Float32Array) => {\r\n                gl.uniformMatrix2fv(location, false, value);\r\n            };\r\n        case gl.FLOAT_MAT3:\r\n            return (value: Float32Array) => {\r\n                gl.uniformMatrix3fv(location, false, value);\r\n            };\r\n            break;\r\n        case gl.FLOAT_MAT4:\r\n            return (value: Float32Array) => {\r\n                gl.uniformMatrix4fv(location, false, value);\r\n            };\r\n            break;\r\n        case gl.SAMPLER_2D:\r\n            let currentBindPoint = bindpoint++;\r\n            return (value: ItextureInfo) => {\r\n                gl.activeTexture(gl.TEXTURE0 + currentBindPoint);\r\n                gl.bindTexture(gl.TEXTURE_2D, value.texture);\r\n                gl.uniform1i(location, currentBindPoint);\r\n            };\r\n        default:\r\n            console.error(\"uniformSetter not handle type:\" + uniformType + \" yet!\");\r\n            break;\r\n    }\r\n}\r\n\r\nexport function getAttributeSetter(gl: WebGLRenderingContext, location: number) {\r\n    return (value: IvertexAttrib) => {\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, value.glBuffer);\r\n        gl.enableVertexAttribArray(location);\r\n        gl.vertexAttribPointer(\r\n            location,\r\n            value.componentSize,\r\n            value.componentDataType,\r\n            value.normalize,\r\n            value.bytesStride,\r\n            value.bytesOffset,\r\n        );\r\n        if (value.divisor !== undefined) {\r\n            gl.vertexAttribDivisor(location, value.divisor);\r\n        }\r\n    };\r\n}\r\n","import { IvertexAttrib, IvertexIndex, IgeometryInfo, IgeometryOptions, IprogramInfo } from \"./Type\";\r\nimport { createIndexBufferInfo } from \"./vertexIndex\";\r\nimport { createAttributeBufferInfo } from \"./vertexAttribute\";\r\n\r\n// export class GeometryInfo implements IgeometryInfo {\r\n//     vaoDic: { [programeId: number]: WebGLVertexArrayObject } = {};\r\n//     constructor() {\r\n//         this.id = GeometryInfo.nextID();\r\n//     }\r\n//     readonly id: number;\r\n//     primitiveType: number;\r\n//     atts: { [attName: string]: IvertexAttrib } = {};\r\n//     indices?: IvertexIndex;\r\n//     // mode: number;\r\n//     count: number;\r\n//     offset: number = 0;\r\n\r\n//     private static count = 0;\r\n//     static nextID() {\r\n//         return GeometryInfo.count++;\r\n//     }\r\n// }\r\n\r\nexport function createGeometryInfo(gl: WebGLRenderingContext, op: IgeometryOptions): IgeometryInfo {\r\n    // let info = new GeometryInfo();\r\n    let primitiveType = op.primitiveType != null ? op.primitiveType : gl.TRIANGLES;\r\n    let info: IgeometryInfo = {\r\n        atts: {},\r\n        vaoDic: {},\r\n        offset: 0,\r\n        count: null,\r\n        primitiveType: primitiveType,\r\n        name: op.name,\r\n    };\r\n    if (op.indices != null) {\r\n        info.indices = createIndexBufferInfo(gl, op.indices);\r\n        if (info.count == null) {\r\n            info.count = info.indices.count;\r\n        }\r\n    }\r\n    for (let attName in op.atts) {\r\n        info.atts[attName] = createAttributeBufferInfo(gl, attName, op.atts[attName]);\r\n        if (info.count == null) {\r\n            info.count = info.atts[attName].count;\r\n        }\r\n    }\r\n    return info;\r\n}\r\n/**\r\n *  tips : setProgrameWithcached need behind (setGeometryWithAdvanced/setGeometryWithCached)，when draw obj\r\n * @param gl\r\n * @param geometry\r\n * @param program\r\n */\r\nexport function setGeometryWithAdvanced(gl: WebGLRenderingContext, geometry: IgeometryInfo, program: IprogramInfo) {\r\n    let bechanged = gl._cachedGeometry != geometry || gl._cachedProgram != program.bassProgram.program;\r\n    if (bechanged) {\r\n        if (geometry.vaoDic[program.bassProgram.id]) {\r\n            gl.bindVertexArray(geometry.vaoDic[program.bassProgram.id]);\r\n        } else {\r\n            if (gl.beActiveVao) {\r\n                let vao = createVaoByPrograme(gl, program, geometry);\r\n                gl.bindVertexArray(vao);\r\n                geometry.vaoDic[program.bassProgram.id] = vao;\r\n            } else {\r\n                setGeometry(gl, geometry, program);\r\n            }\r\n        }\r\n        gl._cachedGeometry = geometry;\r\n    }\r\n}\r\n\r\nexport function setGeometry(gl: WebGLRenderingContext, geometry: IgeometryInfo, program: IprogramInfo) {\r\n    let programAtts = program.bassProgram.attsDic;\r\n    for (let attName in programAtts) {\r\n        if (geometry.atts[attName]) {\r\n            programAtts[attName].setter(geometry.atts[attName]);\r\n        } else {\r\n            //todo\r\n        }\r\n    }\r\n    if (geometry.indices) {\r\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, geometry.indices.glBuffer);\r\n    }\r\n}\r\n/**\r\n * tips : setProgrameWithcached need behind (setGeometryWithAdvanced/setGeometryWithCached)，when draw obj\r\n * @param gl\r\n * @param geometry\r\n * @param program\r\n */\r\nexport function setGeometryWithCached(gl: WebGLRenderingContext, geometry: IgeometryInfo, program: IprogramInfo) {\r\n    if (gl._cachedGeometry != geometry || gl._cachedProgram != program.bassProgram.program) {\r\n        setGeometry(gl, geometry, program);\r\n        gl._cachedGeometry = geometry;\r\n    }\r\n}\r\n\r\n//------------program和vao是一一对应的，geometry可以有多个vao\r\n/**\r\n * 创建vao将geometry和program绑定\r\n */\r\nexport function createVaoByPrograme(\r\n    gl: WebGLRenderingContext,\r\n    program: IprogramInfo,\r\n    geometry: IgeometryInfo,\r\n): WebGLVertexArrayObject {\r\n    let vao = gl.createVertexArray();\r\n    gl.bindVertexArray(vao);\r\n    setGeometry(gl, geometry, program);\r\n    gl.bindVertexArray(null);\r\n    return vao;\r\n}\r\n","import {\r\n    IbassProgramInfo,\r\n    IvertexAttrib,\r\n    IattributeInfo,\r\n    IuniformInfo,\r\n    IprogramOptions,\r\n    IprogramInfo,\r\n    IbassProgramOption,\r\n    IprogramState,\r\n    ItextureInfo,\r\n} from \"./Type\";\r\nimport { setProgramStates, setProgramStatesWithCached } from \"./state\";\r\n\r\nexport enum ShaderTypeEnum {\r\n    VS,\r\n    FS,\r\n}\r\n\r\nexport function createProgramInfo(gl: WebGLRenderingContext, op: IprogramOptions): Program {\r\n    let bassProgram;\r\n    if (!(op.program instanceof BassProgram)) {\r\n        let bassprogramOp = op.program as IbassProgramOption;\r\n        bassProgram = createBassProgramInfo(gl, bassprogramOp.vs, bassprogramOp.fs, bassprogramOp.name);\r\n    } else {\r\n        bassProgram = op.program;\r\n    }\r\n    if (bassProgram) {\r\n        let info = new Program();\r\n        info.bassProgram = bassProgram;\r\n        info.uniforms = op.uniforms;\r\n        info.states = op.states;\r\n        return info;\r\n    } else {\r\n        return null;\r\n    }\r\n}\r\n\r\n/**\r\n * bing program 、set uniforms 、set webgl states\r\n * @param gl\r\n * @param program\r\n */\r\nexport function setProgram(gl: WebGLRenderingContext, program: IprogramInfo) {\r\n    gl.useProgram(program.bassProgram.program);\r\n\r\n    if (program.uniforms) {\r\n        setProgramUniforms(program.bassProgram, program.uniforms);\r\n    }\r\n    if (program.states) {\r\n        setProgramStates(gl, program.states);\r\n    }\r\n}\r\n\r\nexport function setProgramWithCached(gl: WebGLRenderingContext, program: IprogramInfo) {\r\n    if (gl._cachedProgram != program.bassProgram.program) {\r\n        gl._cachedProgram = program.bassProgram.program;\r\n\r\n        gl.useProgram(program.bassProgram.program);\r\n    }\r\n    if (program.uniforms) {\r\n        setProgramUniforms(program.bassProgram, program.uniforms);\r\n    }\r\n    if (program.states) {\r\n        setProgramStatesWithCached(gl, program.states);\r\n    }\r\n}\r\n\r\nexport function setProgramUniforms(info: IbassProgramInfo, uniforms: { [name: string]: any }) {\r\n    for (let key in uniforms) {\r\n        let setter = info.uniformsDic[key].setter;\r\n        let value = uniforms[key];\r\n        setter(value);\r\n    }\r\n}\r\nclass Program implements IprogramInfo {\r\n    bassProgram: IbassProgramInfo;\r\n    uniforms?: { [name: string]: any };\r\n    states?: IprogramState;\r\n}\r\n\r\nclass BassProgram implements IbassProgramInfo {\r\n    readonly id: number;\r\n    programName: string;\r\n    program: WebGLProgram;\r\n    uniformsDic: { [name: string]: IuniformInfo };\r\n    attsDic: { [name: string]: IattributeInfo };\r\n\r\n    constructor(\r\n        programName: string,\r\n        program: WebGLProgram,\r\n        uniformsDic: { [name: string]: IuniformInfo },\r\n        attsDic: { [name: string]: IattributeInfo },\r\n    ) {\r\n        this.id = BassProgram.nextID();\r\n        this.programName = programName;\r\n        this.program = program;\r\n        this.uniformsDic = uniformsDic;\r\n        this.attsDic = attsDic;\r\n    }\r\n\r\n    private static count = 0;\r\n    static nextID() {\r\n        return BassProgram.count++;\r\n    }\r\n}\r\n\r\nexport function createBassProgramInfo(gl: WebGLRenderingContext, vs: string, fs: string, name: string): BassProgram {\r\n    let vsShader = createShader(gl, ShaderTypeEnum.VS, vs, name + \"_vs\");\r\n    let fsShader = createShader(gl, ShaderTypeEnum.FS, fs, name + \"_fs\");\r\n    if (vsShader && fsShader) {\r\n        let item = gl.createProgram();\r\n        gl.attachShader(item, vsShader.shader);\r\n        gl.attachShader(item, fsShader.shader);\r\n        gl.linkProgram(item);\r\n        let check = gl.getProgramParameter(item, gl.LINK_STATUS);\r\n        if (check == false) {\r\n            let debguInfo =\r\n                \"ERROR: compile program Error!\" + \"VS:\" + vs + \"   FS:\" + fs + \"\\n\" + gl.getProgramInfoLog(item);\r\n            console.error(debguInfo);\r\n            gl.deleteProgram(item);\r\n            return null;\r\n        } else {\r\n            let attsInfo = getAttributesInfo(gl, item);\r\n            let uniformsInfo = getUniformsInfo(gl, item);\r\n            return new BassProgram(name, item, uniformsInfo, attsInfo);\r\n            // return { program: item, programName: name, uniformsDic: uniformsInfo, attsDic: attsInfo };\r\n        }\r\n    }\r\n}\r\n\r\nexport function getAttributesInfo(\r\n    gl: WebGLRenderingContext,\r\n    program: WebGLProgram,\r\n): { [attName: string]: IattributeInfo } {\r\n    let attdic: { [attName: string]: IattributeInfo } = {};\r\n    let numAttribs = gl.getProgramParameter(program, gl.ACTIVE_ATTRIBUTES);\r\n    for (let i = 0; i < numAttribs; i++) {\r\n        let attribInfo = gl.getActiveAttrib(program, i);\r\n        if (!attribInfo) break;\r\n        let attName = attribInfo.name;\r\n        let attlocation = gl.getAttribLocation(program, attName);\r\n        let func = getAttributeSetter(gl, attlocation);\r\n\r\n        attdic[attName] = { name: attName, location: attlocation, setter: func };\r\n    }\r\n    return attdic;\r\n}\r\n\r\nexport function getUniformsInfo(gl: WebGLRenderingContext, program: WebGLProgram): { [name: string]: IuniformInfo } {\r\n    let uniformDic: { [name: string]: IuniformInfo } = {};\r\n    let numUniforms = gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS);\r\n\r\n    let bindpoint = 0;\r\n    for (let i = 0; i < numUniforms; i++) {\r\n        let uniformInfo = gl.getActiveUniform(program, i);\r\n        if (!uniformInfo) break;\r\n\r\n        let name = uniformInfo.name;\r\n        let type = uniformInfo.type;\r\n        let location = gl.getUniformLocation(program, name);\r\n\r\n        let beArray = false;\r\n        // remove the array suffix.\r\n        if (name.substr(-3) === \"[0]\") {\r\n            beArray = true;\r\n            // name = name.substr(0, name.length - 3);\r\n        }\r\n        if (location == null) continue;\r\n\r\n        let func = getUniformSetter(gl, type, beArray, location, bindpoint);\r\n        uniformDic[name] = { name: name, location: location, type: type, setter: func };\r\n    }\r\n    return uniformDic;\r\n}\r\n\r\nconst FRAGMENT_SHADER = 0x8b30;\r\nconst VERTEX_SHADER = 0x8b31;\r\n\r\nexport function createShader(gl: WebGLRenderingContext, type: ShaderTypeEnum, source: string, name: string = null) {\r\n    let target = type == ShaderTypeEnum.VS ? VERTEX_SHADER : FRAGMENT_SHADER;\r\n    let item = gl.createShader(target);\r\n\r\n    gl.shaderSource(item, source);\r\n    gl.compileShader(item);\r\n    let check = gl.getShaderParameter(item, gl.COMPILE_STATUS);\r\n    if (check == false) {\r\n        let debug =\r\n            type == ShaderTypeEnum.VS ? \"ERROR: compile  VS Shader Error! VS:\" : \"ERROR: compile FS Shader Error! FS:\";\r\n        debug = debug + name + \".\\n\";\r\n        console.error(debug + gl.getShaderInfoLog(item));\r\n        gl.deleteShader(item);\r\n        return null;\r\n    } else {\r\n        return { shaderType: type, shaderName: name, shader: item };\r\n    }\r\n}\r\n\r\nexport function getUniformSetter(\r\n    gl: WebGLRenderingContext,\r\n    uniformType: number,\r\n    beArray: boolean,\r\n    location: WebGLUniformLocation,\r\n    bindpoint: number,\r\n) {\r\n    switch (uniformType) {\r\n        case gl.FLOAT:\r\n            if (beArray) {\r\n                return (value: any) => {\r\n                    gl.uniform1fv(location, value);\r\n                };\r\n            } else {\r\n                return (value: any) => {\r\n                    gl.uniform1f(location, value);\r\n                };\r\n            }\r\n            break;\r\n        case gl.FLOAT_VEC2:\r\n            return (value: Float32Array) => {\r\n                gl.uniform2fv(location, value);\r\n            };\r\n            break;\r\n        case gl.FLOAT_VEC3:\r\n            return (value: Float32Array) => {\r\n                gl.uniform3fv(location, value);\r\n            };\r\n            break;\r\n        case gl.FLOAT_VEC4:\r\n            return (value: Float32Array) => {\r\n                gl.uniform4fv(location, value);\r\n            };\r\n            break;\r\n        case gl.INT:\r\n        case gl.BOOL:\r\n            if (beArray) {\r\n                return (value: number[]) => {\r\n                    gl.uniform1iv(location, value);\r\n                };\r\n            } else {\r\n                return (value: number) => {\r\n                    gl.uniform1i(location, value);\r\n                };\r\n            }\r\n            break;\r\n        case gl.INT_VEC2:\r\n        case gl.BOOL_VEC2:\r\n            return (value: number[]) => {\r\n                gl.uniform2iv(location, value);\r\n            };\r\n            break;\r\n        case gl.INT_VEC3:\r\n        case gl.BOOL_VEC3:\r\n            return (value: number[]) => {\r\n                gl.uniform3iv(location, value);\r\n            };\r\n            break;\r\n        case gl.INT_VEC4:\r\n        case gl.BOOL_VEC4:\r\n            return (value: number[]) => {\r\n                gl.uniform4fv(location, value);\r\n            };\r\n            break;\r\n        case gl.FLOAT_MAT2:\r\n            return (value: Float32Array) => {\r\n                gl.uniformMatrix2fv(location, false, value);\r\n            };\r\n        case gl.FLOAT_MAT3:\r\n            return (value: Float32Array) => {\r\n                gl.uniformMatrix3fv(location, false, value);\r\n            };\r\n            break;\r\n        case gl.FLOAT_MAT4:\r\n            return (value: Float32Array) => {\r\n                gl.uniformMatrix4fv(location, false, value);\r\n            };\r\n            break;\r\n        case gl.SAMPLER_2D:\r\n            let currentBindPoint = bindpoint++;\r\n            return (value: ItextureInfo) => {\r\n                gl.activeTexture(gl.TEXTURE0 + currentBindPoint);\r\n                gl.bindTexture(gl.TEXTURE_2D, value.texture);\r\n                gl.uniform1i(location, currentBindPoint);\r\n            };\r\n        default:\r\n            console.error(\"uniformSetter not handle type:\" + uniformType + \" yet!\");\r\n            break;\r\n    }\r\n}\r\n\r\nexport function getAttributeSetter(gl: WebGLRenderingContext, location: number) {\r\n    return (value: IvertexAttrib) => {\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, value.glBuffer);\r\n        gl.enableVertexAttribArray(location);\r\n        gl.vertexAttribPointer(\r\n            location,\r\n            value.componentSize,\r\n            value.componentDataType,\r\n            value.normalize,\r\n            value.bytesStride,\r\n            value.bytesOffset,\r\n        );\r\n        if (value.divisor !== undefined) {\r\n            gl.vertexAttribDivisor(location, value.divisor);\r\n        }\r\n    };\r\n}\r\n","import { ItexViewDataOption, ItexImageDataOption, ItextureInfo } from \"./Type\";\r\n\r\nexport function createTextureFromTypedArray(gl: WebGLRenderingContext, texOP: ItexViewDataOption): ItextureInfo {\r\n    // deduceTextureTypedArrayOption(gl, data, texOP);\r\n    let tex = gl.createTexture();\r\n    let texDes = checkTextureOption(gl, texOP);\r\n\r\n    gl.bindTexture(texDes.target, tex);\r\n    gl.texParameteri(texDes.target, gl.TEXTURE_MAG_FILTER, texDes.filterMax);\r\n    gl.texParameteri(texDes.target, gl.TEXTURE_MIN_FILTER, texDes.filterMin);\r\n    gl.texParameteri(texDes.target, gl.TEXTURE_WRAP_S, texDes.wrapS);\r\n    gl.texParameteri(texDes.target, gl.TEXTURE_WRAP_T, texDes.wrapT);\r\n\r\n    if (texOP.mipmaps) {\r\n        for (let i = 0; i < texOP.mipmaps.length; i++) {\r\n            let levelData = texOP.mipmaps[i];\r\n            gl.texImage2D(\r\n                texDes.target,\r\n                i,\r\n                texDes.pixelFormat,\r\n                levelData.width,\r\n                levelData.height,\r\n                0,\r\n                texDes.pixelFormat,\r\n                texDes.pixelDatatype,\r\n                levelData.viewData,\r\n            );\r\n        }\r\n    } else {\r\n        gl.texImage2D(\r\n            texDes.target,\r\n            0,\r\n            texDes.pixelFormat,\r\n            texOP.width,\r\n            texOP.height,\r\n            0,\r\n            texDes.pixelFormat,\r\n            texDes.pixelDatatype,\r\n            texOP.viewData,\r\n        );\r\n        if (texDes.enableMipMap) {\r\n            gl.generateMipmap(texDes.target);\r\n        }\r\n    }\r\n\r\n    return {\r\n        texture: tex,\r\n        texDes: texDes,\r\n    };\r\n}\r\n\r\nexport function createTextureFromImageSource(gl: WebGLRenderingContext, texOP: ItexImageDataOption): ItextureInfo {\r\n    let tex = gl.createTexture();\r\n    texOP.width = texOP.img.width;\r\n    texOP.height = texOP.img.height;\r\n\r\n    let texDes = checkTextureOption(gl, texOP);\r\n\r\n    gl.bindTexture(texDes.target, tex);\r\n    gl.texParameteri(texDes.target, gl.TEXTURE_MAG_FILTER, texDes.filterMax);\r\n    gl.texParameteri(texDes.target, gl.TEXTURE_MIN_FILTER, texDes.filterMin);\r\n    gl.texParameteri(texDes.target, gl.TEXTURE_WRAP_S, texDes.wrapS);\r\n    gl.texParameteri(texDes.target, gl.TEXTURE_WRAP_T, texDes.wrapT);\r\n\r\n    if (texOP.mipmaps != null) {\r\n        for (let i = 0; i < texOP.mipmaps.length; i++) {\r\n            let levelData = texOP.mipmaps[i];\r\n            gl.texImage2D(\r\n                texDes.target,\r\n                i,\r\n                texDes.pixelFormat,\r\n                texDes.pixelFormat,\r\n                texDes.pixelDatatype,\r\n                levelData.img,\r\n            );\r\n        }\r\n    } else {\r\n        gl.texImage2D(texDes.target, 0, texDes.pixelFormat, texDes.pixelFormat, texDes.pixelDatatype, texOP.img);\r\n        if (texDes.enableMipMap) {\r\n            gl.generateMipmap(texDes.target);\r\n        }\r\n    }\r\n    return {\r\n        texture: tex,\r\n        texDes: texDes,\r\n    };\r\n}\r\n\r\nfunction isPowerOf2(value: number) {\r\n    return (value & (value - 1)) === 0;\r\n}\r\n\r\nfunction canGenerateMipmap(gl: WebGLRenderingContext, width: number, height: number) {\r\n    if (!gl.beWebgl2) {\r\n        return isPowerOf2(width) && isPowerOf2(height);\r\n    }\r\n    return true;\r\n}\r\n\r\nfunction canWrapReapeat(gl: WebGLRenderingContext, width: number, height: number) {\r\n    if (!gl.beWebgl2) {\r\n        return isPowerOf2(width) && isPowerOf2(height);\r\n    }\r\n    return true;\r\n}\r\n\r\nfunction filterFallback(gl: WebGLRenderingContext, filter: number): number {\r\n    if (filter === gl.NEAREST || filter === gl.NEAREST_MIPMAP_LINEAR || filter === gl.NEAREST_MIPMAP_NEAREST) {\r\n        return gl.NEAREST;\r\n    }\r\n    return gl.LINEAR;\r\n}\r\n\r\nfunction checkTextureOption(gl: WebGLRenderingContext, texOP: ItexImageDataOption | ItexViewDataOption) {\r\n    let texdes = { ...texOP };\r\n\r\n    texdes.target = (texOP && texOP.target) || gl.TEXTURE_2D;\r\n    texdes.pixelFormat = (texOP && texOP.pixelFormat) || gl.RGBA;\r\n    texdes.pixelDatatype = (texOP && texOP.pixelDatatype) || gl.UNSIGNED_BYTE;\r\n\r\n    let beCanWrapReapt = canWrapReapeat(gl, texdes.width, texdes.height);\r\n    let beCanGenerateMipmap = canGenerateMipmap(gl, texdes.width, texdes.height);\r\n    if (texdes.mipmaps != null) {\r\n        texdes.enableMipMap = true;\r\n    } else {\r\n        texdes.enableMipMap = texOP.enableMipMap != false && beCanGenerateMipmap;\r\n    }\r\n\r\n    if (beCanWrapReapt) {\r\n        texdes.wrapS = (texOP && texOP.wrapS) || gl.REPEAT;\r\n        texdes.wrapT = (texOP && texOP.wrapT) || gl.REPEAT;\r\n    } else {\r\n        texdes.wrapS = texdes.wrapT = gl.CLAMP_TO_EDGE;\r\n        if ((texOP && texOP.wrapS && texOP.wrapS == gl.REPEAT) || (texOP && texOP.wrapT && texOP.wrapT == gl.REPEAT)) {\r\n            console.warn(\"texture repeat need Img size be power of 2!\");\r\n        }\r\n    }\r\n    if (texdes.enableMipMap) {\r\n        texdes.filterMax = (texOP && texOP.filterMax) || gl.LINEAR;\r\n        texdes.filterMin = (texOP && texOP.filterMin) || gl.NEAREST_MIPMAP_LINEAR;\r\n    } else {\r\n        texdes.filterMax = texOP && texOP.filterMax ? filterFallback(gl, texOP.filterMax) : gl.LINEAR;\r\n        texdes.filterMin = texOP && texOP.filterMin ? filterFallback(gl, texOP.filterMax) : gl.LINEAR;\r\n\r\n        if (texOP && texOP.filterMin && (texOP.filterMin != gl.NEAREST || texOP.filterMin != gl.LINEAR)) {\r\n            console.warn(\"texture mimap filter need Img size be power of 2 And enable mimap option!\");\r\n        }\r\n    }\r\n\r\n    return texdes;\r\n}\r\n","import { IprogramState, IgeometryInfo } from \"./Type\";\r\n\r\nimport { IfboInfo } from \"./FrameBuffer\";\r\n\r\ndeclare global {\r\n    interface WebGLRenderingContext {\r\n        _cachedFrameBuffer: IfboInfo;\r\n\r\n        _cachedGeometry: IgeometryInfo;\r\n        _cachedProgram: WebGLProgram;\r\n        _cachedEnableCullFace: boolean;\r\n        _cachedCullFace: boolean;\r\n        _cachedDepthWrite: boolean;\r\n        _cachedDepthTest: boolean;\r\n        _cachedEnableBlend: boolean;\r\n        _cachedBlendEquation: number;\r\n        _cachedBlendFuncSrc: number;\r\n        _cachedBlendFuncDst: number;\r\n        _cachedEnableStencilTest: boolean;\r\n        _cachedStencilFunc: number;\r\n        _cachedStencilRefValue: number;\r\n        _cachedStencilMask: number;\r\n        _cachedStencilFail: number;\r\n        _cachedStencilPassZfail: number;\r\n        _cachedStencilFaileZpass: number;\r\n\r\n        _cachedViewPortX: number;\r\n        _cachedViewPortY: number;\r\n        _cachedViewPortWidth: number;\r\n        _cachedViewPortHeight: number;\r\n\r\n        _cacheColorMaskR: boolean;\r\n        _cacheColorMaskG: boolean;\r\n        _cacheColorMaskB: boolean;\r\n        _cacheColorMaskA: boolean;\r\n    }\r\n}\r\nexport function setClear(\r\n    gl: WebGLRenderingContext,\r\n    clearDepth: boolean,\r\n    clearColor: Float32Array | null,\r\n    clearStencil: boolean = false,\r\n) {\r\n    let cleartag = 0;\r\n    if (clearDepth) {\r\n        gl.clearDepth(1.0);\r\n        cleartag |= gl.DEPTH_BUFFER_BIT;\r\n    }\r\n    if (clearColor) {\r\n        gl.clearColor(clearColor[0], clearColor[1], clearColor[2], clearColor[3]);\r\n        cleartag |= gl.COLOR_BUFFER_BIT;\r\n    }\r\n    if (clearStencil) {\r\n        gl.clearStencil(0);\r\n        cleartag |= gl.STENCIL_BUFFER_BIT;\r\n    }\r\n    if (cleartag != 0) {\r\n        gl.clear(cleartag);\r\n    }\r\n}\r\n\r\nexport function setViewPortWithCached(gl: WebGLRenderingContext, x: number, y: number, width: number, height: number) {\r\n    let bechanged =\r\n        gl._cachedViewPortX != x ||\r\n        gl._cachedViewPortY != y ||\r\n        gl._cachedViewPortWidth != width ||\r\n        gl._cachedViewPortHeight != height;\r\n    if (bechanged) {\r\n        gl.viewport(x, y, width, height);\r\n        gl._cachedViewPortX = x;\r\n        gl._cachedViewPortY = y;\r\n        gl._cachedViewPortWidth = width;\r\n        gl._cachedViewPortHeight = height;\r\n    }\r\n}\r\nexport function setViewPort(gl: WebGLRenderingContext, x: number, y: number, width: number, height: number) {\r\n    gl.viewport(x, y, width, height);\r\n}\r\nexport function setColorMaskWithCached(\r\n    gl: WebGLRenderingContext,\r\n    maskR: boolean,\r\n    maskG: boolean,\r\n    maskB: boolean,\r\n    maskA: boolean,\r\n) {\r\n    if (\r\n        gl._cacheColorMaskR != maskR ||\r\n        gl._cacheColorMaskG != maskG ||\r\n        gl._cacheColorMaskB != maskB ||\r\n        gl._cacheColorMaskA != maskA\r\n    ) {\r\n        gl.colorMask(maskR, maskG, maskB, maskA);\r\n        gl._cacheColorMaskR = maskR;\r\n        gl._cacheColorMaskG = maskG;\r\n        gl._cacheColorMaskB = maskB;\r\n        gl._cacheColorMaskA = maskA;\r\n    }\r\n}\r\n\r\nexport function setCullFaceState(gl: WebGLRenderingContext, enableCullFace: boolean = true, cullBack: boolean = true) {\r\n    if (enableCullFace) {\r\n        gl.enable(gl.CULL_FACE);\r\n        gl.cullFace(cullBack ? gl.BACK : gl.FRONT);\r\n    } else {\r\n        gl.disable(gl.CULL_FACE);\r\n    }\r\n}\r\n\r\nexport function setCullFaceStateWithCached(\r\n    gl: WebGLRenderingContext,\r\n    enableCullFace: boolean = true,\r\n    cullBack: boolean = true,\r\n) {\r\n    if (gl._cachedEnableCullFace != enableCullFace) {\r\n        gl._cachedEnableCullFace = enableCullFace;\r\n\r\n        if (enableCullFace) {\r\n            gl.enable(gl.CULL_FACE);\r\n\r\n            if (gl._cachedCullFace != cullBack) {\r\n                gl._cachedCullFace = cullBack;\r\n\r\n                gl.cullFace(cullBack ? gl.BACK : gl.FRONT);\r\n            }\r\n        } else {\r\n            gl.disable(gl.CULL_FACE);\r\n        }\r\n    } else {\r\n        if (gl._cachedCullFace != cullBack) {\r\n            gl._cachedCullFace = cullBack;\r\n\r\n            gl.cullFace(cullBack ? gl.BACK : gl.FRONT);\r\n        }\r\n    }\r\n}\r\n\r\nexport function setDepthState(gl: WebGLRenderingContext, depthWrite: boolean = true, depthTest: boolean = true) {\r\n    gl.depthMask(depthWrite);\r\n    if (depthTest) {\r\n        gl.enable(gl.DEPTH_TEST);\r\n    } else {\r\n        gl.disable(gl.DEPTH_TEST);\r\n    }\r\n}\r\n\r\nexport function setDepthStateWithCached(\r\n    gl: WebGLRenderingContext,\r\n    depthWrite: boolean = true,\r\n    depthTest: boolean = true,\r\n) {\r\n    if (gl._cachedDepthWrite != depthWrite) {\r\n        gl._cachedDepthWrite = depthWrite;\r\n        gl.depthMask(depthWrite);\r\n    }\r\n    if (gl._cachedDepthTest != depthTest) {\r\n        gl._cachedDepthTest = depthTest;\r\n        if (depthTest) {\r\n            gl.enable(gl.DEPTH_TEST);\r\n        } else {\r\n            gl.disable(gl.DEPTH_TEST);\r\n        }\r\n    }\r\n}\r\n\r\nexport function setBlendState(\r\n    gl: WebGLRenderingContext,\r\n    enableBlend: boolean = false,\r\n    blendEquation: number = gl.FUNC_ADD,\r\n    blendSrc: number = gl.ONE,\r\n    blendDst: number = gl.ONE_MINUS_SRC_ALPHA,\r\n) {\r\n    if (enableBlend) {\r\n        gl.enable(gl.BLEND);\r\n        gl.blendEquation(blendEquation);\r\n        gl.blendFunc(blendSrc, blendDst);\r\n    }\r\n}\r\n\r\nexport function setBlendStateWithCached(\r\n    gl: WebGLRenderingContext,\r\n    enableBlend: boolean = false,\r\n    blendEquation: number = gl.FUNC_ADD,\r\n    blendSrc: number = gl.ONE,\r\n    blendDst: number = gl.ONE_MINUS_SRC_ALPHA,\r\n) {\r\n    if (gl._cachedEnableBlend != enableBlend) {\r\n        gl._cachedEnableBlend = enableBlend;\r\n        if (enableBlend) {\r\n            gl.enable(gl.BLEND);\r\n\r\n            if (gl._cachedBlendEquation != blendEquation) {\r\n                gl._cachedBlendEquation = blendEquation;\r\n                gl.blendEquation(blendEquation);\r\n            }\r\n            if (gl._cachedBlendFuncSrc != blendSrc || gl._cachedBlendFuncDst != blendDst) {\r\n                gl._cachedBlendFuncSrc = blendSrc;\r\n                gl._cachedBlendFuncDst = blendDst;\r\n                gl.blendFunc(blendSrc, blendDst);\r\n            }\r\n        } else {\r\n            gl.disable(gl.BLEND);\r\n        }\r\n    }\r\n}\r\nexport function setStencilState(\r\n    gl: WebGLRenderingContext,\r\n    enableStencilTest: boolean = false,\r\n    stencilFunc: number = gl.ALWAYS,\r\n    stencilRefValue: number = 1,\r\n    stencilMask: number = 0xff,\r\n    stencilFail: number = gl.KEEP,\r\n    stencilPassZfail: number = gl.REPLACE,\r\n    stencilFaileZpass: number = gl.KEEP,\r\n) {\r\n    if (enableStencilTest) {\r\n        gl.enable(gl.STENCIL_TEST);\r\n        gl.stencilFunc(stencilFunc, stencilRefValue, stencilMask);\r\n        gl.stencilOp(stencilFail, stencilPassZfail, stencilFaileZpass);\r\n    }\r\n}\r\nexport function setStencilStateWithCached(\r\n    gl: WebGLRenderingContext,\r\n    enableStencilTest: boolean = false,\r\n    stencilFunc: number = gl.ALWAYS,\r\n    stencilRefValue: number = 1,\r\n    stencilMask: number = 0xff,\r\n    stencilFail: number = gl.KEEP,\r\n    stencilPassZfail: number = gl.REPLACE,\r\n    stencilFaileZpass: number = gl.KEEP,\r\n) {\r\n    if (gl._cachedEnableStencilTest != enableStencilTest) {\r\n        gl._cachedEnableStencilTest = enableStencilTest;\r\n        gl.enable(gl.STENCIL_TEST);\r\n        if (\r\n            gl._cachedStencilFunc != stencilFunc ||\r\n            gl._cachedStencilRefValue != stencilRefValue ||\r\n            gl._cachedStencilMask != stencilMask\r\n        ) {\r\n            gl._cachedStencilFunc = stencilFunc;\r\n            gl._cachedStencilRefValue = stencilRefValue;\r\n            gl._cachedStencilMask = stencilMask;\r\n            gl.stencilFunc(stencilFunc, stencilRefValue, stencilMask);\r\n        }\r\n\r\n        if (\r\n            gl._cachedStencilFail != stencilFail ||\r\n            gl._cachedStencilPassZfail != stencilPassZfail ||\r\n            gl._cachedStencilFaileZpass != stencilFaileZpass\r\n        ) {\r\n            gl._cachedStencilFail = stencilFail;\r\n            gl._cachedStencilPassZfail = stencilPassZfail;\r\n            gl._cachedStencilFaileZpass = stencilFaileZpass;\r\n            gl.stencilOp(stencilFail, stencilPassZfail, stencilFaileZpass);\r\n        }\r\n    }\r\n}\r\n\r\nexport function setProgramStates(gl: WebGLRenderingContext, state: IprogramState) {\r\n    //---------------------------cullface\r\n    setCullFaceState(gl, state.enableCullFace, state.cullBack);\r\n    //----------------depth\r\n    setDepthState(gl, state.depthWrite, state.depthTest);\r\n    //------------------------blend\r\n    setBlendState(gl, state.enableBlend, state.blendEquation, state.blendSrc, state.blendDst);\r\n    //-------------------------stencil\r\n    setStencilState(\r\n        gl,\r\n        state.enableStencilTest,\r\n        state.stencilFunc,\r\n        state.stencilRefValue,\r\n        state.stencilMask,\r\n        state.stencilFail,\r\n        state.stencilPassZfail,\r\n        state.stencilFaileZpass,\r\n    );\r\n}\r\n\r\nexport function setProgramStatesWithCached(gl: WebGLRenderingContext, state: IprogramState) {\r\n    //---------------------------cullface\r\n    setCullFaceStateWithCached(gl, state.enableCullFace, state.cullBack);\r\n    //----------------depth\r\n    setDepthStateWithCached(gl, state.depthWrite, state.depthTest);\r\n    //------------------------blend\r\n    setBlendStateWithCached(gl, state.enableBlend, state.blendEquation, state.blendSrc, state.blendDst);\r\n    //-------------------------stencil\r\n    setStencilStateWithCached(\r\n        gl,\r\n        state.enableStencilTest,\r\n        state.stencilFunc,\r\n        state.stencilRefValue,\r\n        state.stencilMask,\r\n        state.stencilFail,\r\n        state.stencilPassZfail,\r\n        state.stencilFaileZpass,\r\n    );\r\n}\r\n\r\n// /**\r\n//  *\r\n//  * @param state 原始 webgl state\r\n//  */\r\n// // state 是给每个物体 render用的，是不想受前一个物体render影响，所以需要推断出完整的 webgl state，缺失的按照默认值\r\n// function deduceFullShderState(state: IprogramState): IprogramState {\r\n//     //----------------------------cull face\r\n//     if (state.enableCullFace == null) {\r\n//         state.enableCullFace = true;\r\n//     }\r\n//     if (state.enableCullFace) {\r\n//         if (state.cullBack == null) {\r\n//             state.cullBack = true;\r\n//         }\r\n//     }\r\n\r\n//     //------------------depth\r\n//     if (state.depthWrite == null) {\r\n//         state.depthWrite = true;\r\n//     }\r\n//     if (state.depthTest == null) {\r\n//         state.depthTest = true;\r\n//     }\r\n//     if (state.depthTest) {\r\n//         if (state.depthTestFuc == null) {\r\n//             state.depthTestFuc = GlConstants.LEQUAL;\r\n//         }\r\n//     }\r\n\r\n//     //------------------ blend\r\n//     if (state.enableBlend == true) {\r\n//         if (state.blendEquation == null) {\r\n//             state.blendEquation = GlConstants.FUNC_ADD;\r\n//         }\r\n//         if (state.blendSrc == null) {\r\n//             state.blendSrc = GlConstants.ONE;\r\n//         }\r\n//         if (state.blendDst == null) {\r\n//             state.blendDst = GlConstants.ONE_MINUS_SRC_ALPHA;\r\n//         }\r\n//     }\r\n\r\n//     //---------------------stencil\r\n//     if (state.enableStencilTest == true) {\r\n//         if (state.stencilFunc == null) {\r\n//             state.stencilFunc = GlConstants.ALWAYS;\r\n//         }\r\n//         if (state.stencilFail == null) {\r\n//             state.stencilFail = GlConstants.KEEP;\r\n//         }\r\n//         if (state.stencilFaileZpass == null) {\r\n//             state.stencilFaileZpass = GlConstants.KEEP;\r\n//         }\r\n//         if (state.stencilPassZfail == null) {\r\n//             state.stencilPassZfail = GlConstants.REPLACE;\r\n//         }\r\n//         if (state.stencilRefValue == null) {\r\n//             state.stencilRefValue = 1;\r\n//         }\r\n//         if (state.stencilMask == null) {\r\n//             state.stencilMask = 0xff;\r\n//         }\r\n//     }\r\n\r\n//     return state;\r\n// }\r\n","import { IcontextOptions, IgeometryInfo, IprogramInfo, Iobject } from \"./Type\";\r\nimport { setGeometryWithAdvanced, setGeometryWithCached, setGeometry } from \"./geometryInfo\";\r\nimport { setProgram, setProgramWithCached } from \"./programInfo\";\r\n\r\ndeclare global {\r\n    interface WebGLVertexArrayObject extends WebGLObject {}\r\n\r\n    interface WebGLRenderingContext {\r\n        beWebgl2: boolean;\r\n\r\n        bindpoint: number;\r\n        beActiveVao: boolean;\r\n        beActiveInstance: boolean;\r\n\r\n        addExtension(extName: string): void;\r\n        createVertexArray(): any;\r\n        bindVertexArray(vao?: WebGLVertexArrayObject | null): void;\r\n        deleteVertexArray(vao: WebGLVertexArrayObject): void;\r\n\r\n        vertexAttribDivisor(index: number, divisor: number): void;\r\n        drawElementsInstanced(mode: number, count: number, type: number, offset: number, instanceCount: number): void;\r\n        drawArraysInstanced(mode: number, first: number, count: number, instanceCount: number): void;\r\n    }\r\n}\r\nWebGLRenderingContext.prototype.addExtension = function(extname: string): boolean {\r\n    let ext = this.getExtension(extname);\r\n    if (ext) {\r\n        switch (extname) {\r\n            case \"OES_vertex_array_object\":\r\n                this.bindVertexArray = ext.bindVertexArrayOES.bind(ext);\r\n                this.createVertexArray = ext.createVertexArrayOES.bind(ext);\r\n                this.deleteVertexArray = ext.deleteVertexArrayOES.bind(ext);\r\n                this.beActiveVao = true;\r\n                return true;\r\n            case \"ANGLE_instanced_arrays\":\r\n                this.vertexAttribDivisor = ext.vertexAttribDivisorANGLE.bind(ext);\r\n                this.drawElementsInstanced = ext.drawElementsInstancedANGLE.bind(ext);\r\n                this.drawArraysInstanced = ext.drawArraysInstancedANGLE.bind(ext);\r\n                this.beActiveInstance = true;\r\n                return true;\r\n            case \"WEBGL_depth_texture\":\r\n                return true;\r\n            default:\r\n                console.warn(\"Not handle in addExtension, type: \" + extname);\r\n                return false;\r\n        }\r\n    }\r\n    return false;\r\n};\r\n\r\nObject.defineProperty(WebGLRenderingContext, \"beWebgl2\", {\r\n    get: function() {\r\n        if (this.beWebgl2 == null) {\r\n            let version = this.getParameter(this.VERSION);\r\n            this.beWebgl2 = version.indexOf(\"WebGL 2.0\") === 0;\r\n        }\r\n        return this._beWebgl2;\r\n    },\r\n    set: function(value: boolean) {\r\n        this._beWebgl2 = value;\r\n    },\r\n});\r\n\r\nexport function setUpWebgl(canvas: HTMLCanvasElement, options: IcontextOptions = {}): WebGLRenderingContext {\r\n    let type = options.context || \"webgl\";\r\n    let gl = canvas.getContext(type, options.contextAtts) as WebGLRenderingContext;\r\n    if (options.extentions != null) {\r\n        options.extentions.forEach(ext => {\r\n            gl.addExtension(ext);\r\n        });\r\n    }\r\n    if (type == \"webgl2\") {\r\n        gl.beActiveInstance = true;\r\n        gl.beActiveVao = true;\r\n    }\r\n\r\n    // canvas.addEventListener('webglcontextlost', function (e)\r\n    // {\r\n    //     console.log(e);\r\n    // }, false);\r\n\r\n    return gl;\r\n}\r\n\r\nexport function setGeometryAndProgram(gl: WebGLRenderingContext, geometry: IgeometryInfo, program: IprogramInfo) {\r\n    setProgram(gl, program);\r\n    setGeometry(gl, geometry, program);\r\n}\r\n\r\nexport function setGeometryAndProgramWithCached(\r\n    gl: WebGLRenderingContext,\r\n    geometry: IgeometryInfo,\r\n    program: IprogramInfo,\r\n) {\r\n    setGeometryWithAdvanced(gl, geometry, program);\r\n    setProgramWithCached(gl, program);\r\n}\r\n\r\nexport function drawBufferInfo(gl: WebGLRenderingContext, geometry: IgeometryInfo, instanceCount?: number): void {\r\n    if (geometry.indices != null) {\r\n        if (instanceCount != null) {\r\n            gl.drawElementsInstanced(\r\n                geometry.primitiveType,\r\n                geometry.count,\r\n                geometry.indices.componentDataType,\r\n                geometry.offset || 0,\r\n                instanceCount,\r\n            );\r\n        } else {\r\n            gl.drawElements(\r\n                geometry.primitiveType,\r\n                geometry.count,\r\n                geometry.indices.componentDataType,\r\n                geometry.offset || 0,\r\n            );\r\n        }\r\n    } else {\r\n        if (instanceCount != null) {\r\n            gl.drawArraysInstanced(geometry.primitiveType, geometry.offset || 0, geometry.count, instanceCount);\r\n        } else {\r\n            gl.drawArrays(geometry.primitiveType, geometry.offset || 0, geometry.count);\r\n        }\r\n    }\r\n}\r\n\r\nexport function drawObject(gl: WebGLRenderingContext, obj: Iobject, instanceCount?: number) {\r\n    setGeometryAndProgramWithCached(gl, obj.geometry, obj.program);\r\n    drawBufferInfo(gl, obj.geometry, instanceCount);\r\n    if (gl.beActiveVao) {\r\n        gl.bindVertexArray(null);\r\n    }\r\n}\r\n\r\nexport function createGlBuffer(gl: WebGLRenderingContext, target: number, viewData: ArrayBufferView): WebGLBuffer {\r\n    let buffer = gl.createBuffer();\r\n    gl.bindBuffer(target, buffer);\r\n    gl.bufferData(target, viewData, gl.STATIC_DRAW);\r\n    return buffer;\r\n}\r\n\r\nexport * from \"./GeometryInfo\";\r\nexport * from \"./VertexAttribute\";\r\nexport * from \"./VertexIndex\";\r\nexport * from \"./ProgramInfo\";\r\nexport * from \"./FrameBuffer\";\r\n// export * from \"./GlConstant\";\r\nexport * from \"./State\";\r\nexport * from \"./Texture\";\r\nexport * from \"./Helper\";\r\n","import {\r\n    createBassProgramInfo,\r\n    createProgramInfo,\r\n    setProgram,\r\n    setGeometryWithAdvanced,\r\n    drawBufferInfo,\r\n    setUpWebgl,\r\n    createTextureFromImageSource,\r\n    createGeometryInfo,\r\n    setGeometry,\r\n} from \"../src/twebgl\";\r\n\r\nimport { IprogramState } from \"../src/type\";\r\n\r\nexport class DomeMatWithTex {\r\n    static run() {\r\n        let cc = document.getElementById(\"canvas\") as HTMLCanvasElement;\r\n        let gl = setUpWebgl(cc, { extentions: [\"OES_vertex_array_object\"] });\r\n        // let be2 = gl;\r\n        let geometry = createGeometryInfo(gl, {\r\n            atts: {\r\n                aPos: [-0.5, -0.5, 0.5, -0.5, 0.5, 0, 0.5, 0.5, 0, 0.5, -0.5, 0],\r\n                aUv: [0, 1, 0, 0, 1, 0, 1, 1],\r\n            },\r\n            indices: [0, 1, 2, 0, 3, 2],\r\n        });\r\n\r\n        let defErrorVs =\r\n            \"\\\r\n              attribute vec3 aPos;\\\r\n              void main()\\\r\n              {\\\r\n                  highp vec4 tmplet_1=vec4(aPos.xyz,1.0);\\\r\n                  gl_Position = tmplet_1;\\\r\n              }\";\r\n\r\n        let defErrorFs =\r\n            \"\\\r\n              uniform highp vec4 _MainColor;\\\r\n              void main()\\\r\n              {\\\r\n                  gl_FragData[0] = _MainColor;\\\r\n              }\";\r\n\r\n        let uniforms: { [key: string]: any } = {};\r\n        uniforms[\"_MainColor\"] = new Float32Array([0.5, 1, 0.5, 1]);\r\n        let bassporgram = createBassProgramInfo(gl, defErrorVs, defErrorFs, \"ssxx\");\r\n\r\n        let program = createProgramInfo(gl, { program: bassporgram, uniforms: uniforms });\r\n\r\n        let defVs =\r\n            \"\\\r\n              attribute vec3 aPos;\\\r\n              attribute vec2 aUv;\\\r\n              varying highp vec2 xlv_TEXCOORD0;   \\\r\n              void main()\\\r\n              {\\\r\n                  highp vec4 tmplet_1=vec4(aPos.xyz,1.0);\\\r\n                  xlv_TEXCOORD0=aUv;\\\r\n                  gl_Position = tmplet_1;\\\r\n              }\";\r\n\r\n        let defFs =\r\n            \"\\\r\n              uniform highp vec4 _MainColor;\\\r\n              varying highp vec2 xlv_TEXCOORD0;   \\\r\n              uniform sampler2D _MainTex;\\\r\n              void main()\\\r\n              {\\\r\n                  lowp vec4 tmplet_3= texture2D(_MainTex, xlv_TEXCOORD0);\\\r\n                  gl_FragData[0] = _MainColor*tmplet_3;\\\r\n              }\";\r\n\r\n        let state: IprogramState = { depthTest: false };\r\n        let imag = new Image();\r\n        imag.src = \"./res/tes.png\";\r\n        imag.onload = () => {\r\n            uniforms[\"_MainTex\"] = createTextureFromImageSource(gl, { img: imag });\r\n            program = createProgramInfo(gl, {\r\n                program: { vs: defVs, fs: defFs, name: \"ssxxss\" },\r\n                uniforms: uniforms,\r\n                states: state,\r\n            });\r\n        };\r\n\r\n        let render = () => {\r\n            gl.clearColor(0.5, 0.1, 0.5, 1);\r\n            gl.clearDepth(0);\r\n            gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\r\n\r\n            // gl.useProgram(program.program);\r\n            setProgram(gl, program);\r\n            setGeometry(gl, geometry, program);\r\n            drawBufferInfo(gl, geometry);\r\n\r\n            requestAnimationFrame(() => {\r\n                render();\r\n            });\r\n        };\r\n        render();\r\n    }\r\n}\r\n","console.log(\"@@@@@@@@@@@@@\");\r\nimport { DemoInstance } from \"./instance\";\r\nimport { DemoVao } from \"./vao\";\r\nimport { DomeMatWithTex } from \"./matwithTex\";\r\n\r\nwindow.onload = () => {\r\n    // DemoInstance.run();\r\n    // DemoVao.run();\r\n    DomeMatWithTex.run();\r\n};\r\n"],"names":["UNSIGNED_SHORT","FLOAT","STATIC_DRAW","createGeometryInfo","setGeometry","ShaderTypeEnum","createProgramInfo","BassProgram","createBassProgramInfo","Program","setProgram","setProgramUniforms","createShader","getAttributesInfo","getUniformsInfo","getAttributeSetter","getUniformSetter","FRAGMENT_SHADER","VERTEX_SHADER"],"mappings":"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"}